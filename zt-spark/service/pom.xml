<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.ztman</groupId>
        <artifactId>ztframework</artifactId>
        <version>1.0.0</version>
    </parent>
    <groupId>com.ztman</groupId>
    <artifactId>zt-spark</artifactId>
    <version>1.0.0</version>
    <name>zt-spark</name>
    <description>Demo project for Spring Boot</description>
    <dependencies>
        <!--upms api、model 模块-->
        <dependency>
            <groupId>com.ztman</groupId>
            <artifactId>admin-client</artifactId>
            <version>1.0.0</version>
        </dependency>
        <!--日志处理-->
        <dependency>
            <groupId>com.ztman</groupId>
            <artifactId>common-log</artifactId>
            <version>1.0.0</version>
        </dependency>
        <!--swagger-->
        <dependency>
            <groupId>com.ztman</groupId>
            <artifactId>common-swagger</artifactId>
            <version>1.0.0</version>
        </dependency>


        <!--eureka 客户端-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <!--配置中心客户端-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>
        <!--spring security 、oauth、jwt依赖-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-security</artifactId>
        </dependency>
        <!--监控客户端-->
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-client</artifactId>
            <version>${monitor.version}</version>
        </dependency>
        <!--mybatis-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>${mbp.boot.version}</version>
        </dependency>
        <!--数据库-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <!--web 模块-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <!--<exclusions>-->
            <!--&lt;!&ndash;排除tomcat依赖&ndash;&gt;-->
            <!--<exclusion>-->
            <!--<artifactId>spring-boot-starter-tomcat</artifactId>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--</exclusion>-->
            <!--</exclusions>-->
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
        </dependency>
        <!--undertow容器-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>


        <!--配置druid连接池-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>1.1.10</version>
        </dependency>

        <!--配置任务调度quartz 依赖 c3p0-->

        <dependency>
            <groupId>com.mchange</groupId>
            <artifactId>c3p0</artifactId>
            <version>0.9.5.2</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-quartz</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>

        <!--集成CAT监控-->
        <!--<dependency>
            <groupId>com.dianping.cat</groupId>
            <artifactId>cat-client</artifactId>
            <version>2.0.0</version>
        </dependency>-->
        <!--		<dependency>-->
        <!--			<groupId>com.dianping.cat</groupId>-->
        <!--			<artifactId>cat-core</artifactId>-->
        <!--			<version>2.0.0</version>-->
        <!--		</dependency>-->
        <dependency>
            <groupId>com.ztman</groupId>
            <artifactId>common-data</artifactId>
            <version>1.0.0</version>
        </dependency>

        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-core</artifactId>
            <version>${mbp.boot.version}</version>
        </dependency>

        <!-- tomcat的支持.-->
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
        </dependency>
        <!-- 热部署 -->
        <dependency>
		     <groupId>org.springframework.boot</groupId>
		     <artifactId>spring-boot-devtools</artifactId>
		     <optional>true</optional> 
		</dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <mainClass>com.ztman.ztspark.ZtSparkApplication</mainClass>
                </configuration>
                <version>1.4.2.RELEASE</version>
            </plugin>
        </plugins>

        <resources>
            <!-- 打包时将jsp文件拷贝到META-INF目录下-->
            <resource>
                <!-- 指定resources插件处理哪个目录下的资源文件 -->
                <directory>src/main/webapp</directory>
                <!--注意此次必须要放在此目录下才能被访问到-->
                <targetPath>META-INF/resources</targetPath>
                <includes>
                    <include>**/**</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/**</include>
                </includes>
                <filtering>false</filtering>
            </resource>
        </resources>
        <finalName>${project.artifactId}-${maven.build.timestamp}</finalName>
    </build>
    <properties>
        <!--自定义默认的编码格式-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!--自定义默认的时间格式 年-月-日-时-分-->
        <maven.build.timestamp.format>
            yyyy-MM-dd_HH_mm
        </maven.build.timestamp.format>
    </properties>
    <distributionManagement>
        <repository>
            <id>releases</id>
            <name>User Project Release</name>
            <url>http://192.168.10.121:8081/repository/maven-releases</url>
        </repository>
        <snapshotRepository>
            <id>snapshot</id>
            <name>User Project SNAPSHOTS</name>
            <url>http://192.168.10.121:8081/repository/maven-snapshots</url>
        </snapshotRepository>
    </distributionManagement>
    <!-- 使用aliyun镜像 -->
    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/libs-milestone</url>
        </repository>
        <repository>
            <id>aliyun</id>
            <name>aliyun</name>
            <url>https://maven.aliyun.com/repository/public</url>
        </repository>
    </repositories>
</project>
