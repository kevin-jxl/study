package ${package}.${moduleName}.service.impl;

import org.springframework.stereotype.Service;
import com.baomidou.mybatisplus.plugins.Page;
import cn.hutool.core.bean.BeanUtil;
import com.ztman.common.core.util.Query;
import ${package}.${moduleName}.mapper.${className}Mapper;
import ${package}.${moduleName}.entity.${className};
import ${package}.${moduleName}.service.${className}Service;


@Service("${classname}Service")
public class ${className}ServiceImpl extends ServiceImpl<${className}Mapper, ${className}> implements ${className}Service {

    @Autowired
    private ${className}Mapper ${classname}Mapper;

    /**
     * 查询${comments}信息
     *
     * @param ${pk.lowerAttrName} ${comments}ID
     * @return ${comments}信息
     */
    @Override
    public ${className} select${className}ById(${pk.attrType} ${pk.lowerAttrName})
    {
        return ${classname}Mapper.select${className}ById(${pk.lowerAttrName});
    }

    /**
     * 查询${comments}列表
     *
     * @param ${classname} ${comments}信息
     * @return ${comments}集合
     */
    @Override
    public List<${className}> select${className}List(${className} ${classname})
    {
        return ${classname}Mapper.select${className}List(${classname});
    }


    /**
     * 分页模糊查询${comments}列表
     * @return ${comments}集合
     */
    @Override
    public Page select${className}ListByLike(Query query)
    {
        ${className} ${classname} =  BeanUtil.mapToBean(query.getCondition(), ${className}.class,false);
        query.setRecords(${classname}Mapper.select${className}ListByLike(query,${classname}));
        return query;
    }

    /**
     * 新增${comments}
     *
     * @param ${classname} ${comments}信息
     * @return 结果
     */
    @Override
    public int insert${className}(${className} ${classname})
    {
        return ${classname}Mapper.insert${className}(${classname});
    }

    /**
     * 修改${comments}
     *
     * @param ${classname} ${comments}信息
     * @return 结果
     */
    @Override
    public int update${className}(${className} ${classname})
    {
        return ${classname}Mapper.update${className}(${classname});
    }


    /**
     * 删除${comments}
     *
     * @param ${pk.lowerAttrName} ${comments}ID
     * @return 结果
     */
    public int delete${className}ById(${pk.attrType} ${pk.lowerAttrName})
    {
        return ${classname}Mapper.delete${className}ById( ${pk.lowerAttrName});
    };


    /**
     * 批量删除${comments}对象
     *
     * @param ids 需要删除的数据ID
     * @return 结果
     */
    @Override
    public int delete${className}ByIds(String[] ${pk.lowerAttrName}s)
    {
        return ${classname}Mapper.delete${className}ByIds( ${pk.lowerAttrName}s);
    }

}
