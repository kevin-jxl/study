{"version":3,"sources":["webpack:///D:/workspace/text/腾讯云小程序音视频通讯Uniapp版/components/trtc-room/trtc-room.vue?8299","webpack:///D:/workspace/text/腾讯云小程序音视频通讯Uniapp版/components/trtc-room/trtc-room.vue?ffc2","webpack:///D:/workspace/text/腾讯云小程序音视频通讯Uniapp版/components/trtc-room/trtc-room.vue?67c7","webpack:///D:/workspace/text/腾讯云小程序音视频通讯Uniapp版/components/trtc-room/trtc-room.vue?c6d4","uni-app:///components/trtc-room/trtc-room.vue","webpack:///D:/workspace/text/腾讯云小程序音视频通讯Uniapp版/components/trtc-room/trtc-room.vue?8a31","webpack:///D:/workspace/text/腾讯云小程序音视频通讯Uniapp版/components/trtc-room/trtc-room.vue?de09"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsH;AACtH;AAC6D;AACL;AACa;;;AAGrE;AACsK;AACtK,gBAAgB,6KAAU;AAC1B,EAAE,+EAAM;AACR,EAAE,oFAAM;AACR,EAAE,6FAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,wFAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACvBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAqnB,CAAgB,mndzoB;AACA;AACA;AACA;AACA;AACA,sF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,2B,gBAEA,EACA,IADA,kBACA,CACA,SACA,YADA,EAEA;AACA,sBAHA,EAIA;AACA,kBALA,EAMA;AACA,oBAPA,EAQA;AACA,kBATA,EAUA;AACA,kBAXA,EAYA;AACA,wBAbA,EAcA,aAdA,EAeA;AACA,oBAhBA,EAiBA,oBAjBA,EAkBA,2BAlBA,EAmBA,2BAnBA,EAoBA,aApBA,GAsBA,CAxBA,EA0BA,cA1BA,EA2BA,SACA;AACA,cACA,YADA,EAEA,uCACA,YADA,EAEA,UAFA,EAGA,WAHA,EAIA,YAJA,EAKA,aALA,IAFA,EAFA,EA3BA,EAwCA,SACA,UADA,sBACA,MADA,EACA,MADA,EACA,CACA,kDACA,yBACA,CAJA,EAKA,UACA,2CACA,4BACA,2BACA,cADA,EAEA,cAFA,EAGA,cAHA,IAKA,CARA,EASA,UATA,EALA,EAxCA,EAyDA,6BACA;AACA,0CACA,CA5DA,EA6DA,qCACA;AACA,sCACA,eACA,CAjEA,EAkEA,6BACA;AACA,mCACA,CArEA,EAsEA,iCACA;AACA,sCAFA,CAEA;AAEA,oBACA,CA3EA,EA4EA,+BACA;AACA,2CACA,CA/EA,EAgFA,mCACA;AACA,uDAEA,4BACA;AACA,oCACA,CAEA,yBACA;AACA;AACA;AACA,KACA,CA9FA,EA+FA,mCACA;AACA,kCACA,CAlGA,EAmGA,2CACA;AACA,0CACA,CAtGA,EAuGA,WACA,qCADA,EAEA;;kGAGA,6BACA,+BACA,wDACA,qCACA,8BACA,qBACA,oBACA,wBACA,wDACA,CAdA,EAgBA;;;;wZAKA,wDACA,+CACA,mCACA,wCACA,8CACA,8CAJA,CAIA;AAEA,oEACA,aACA,oCACA,oCACA,CAEA,yCACA,4BACA,OACA,CAfA,CAeA;AAEA,0CACA,IADA,CACA,oBACA,2BACA,cACA,EACA,oBADA,EADA,EAIA,aACA,yDADA,CACA;AAEA,oDACA,2BACA,UACA,CAVA,EAYA,CAfA,EAgBA,KAhBA,CAgBA,gBACA;AACA,yDACA,YACA,CApBA,EAqBA,CAtCA,EAuCA,CA7DA,EA+DA;;;iFAIA,iDACA,+CACA,kCACA,sBACA,6BACA,2CACA,eACA,EACA,qBADA,EAEA,yBAFA,EAGA,6BAHA,EADA,EAMA,aACA;AACA,oBACA,yBADA,EAEA,6BAFA,IAIA,6FACA,CAbA,EAeA,CApBA,EAqBA,CAzFA,EA2FA;;;yLAIA,iDACA;AACA,uDACA,iCACA,kBADA,IAGA,CArGA,EAuGA;;;oHAIA,qDACA;AACA,wDACA,iCA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shBA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAJA;AAKA;AACA;AACA;AACA,WARA;;AAUA,OAXA;AAYA,KAziBA;;AA2iBA;;;;;AAKA;AACA;AACA,6BADA;AAEA,qCAFA;AAGA;AACA,yCADA,EAHA;;;AAOA,KAxjBA;AAyjBA;AACA;AACA;AACA,6BADA;AAEA,qCAFA;AAGA;AACA,yCADA,EAHA;;;AAOA,KAlkBA;;AAokBA;;;;;AAKA;AACA;AACA,6BADA;AAEA,qCAFA;AAGA;AACA,oCADA,EAHA;;;AAOA,KAjlBA;AAklBA;AACA;AACA;AACA,6BADA;AAEA,qCAFA;AAGA;AACA,oCADA,EAHA;;;AAOA,KA3lBA;;AA6lBA;;;;;AAKA;AACA;AACA;AACA;AACA,+BADA;AAEA,uCAFA;;;AAKA;AACA,iEADA,CACA;;AAEA;AACA;AACA,yCAFA,CAEA;AACA,WAHA,MAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CADA,EADA;;AAIA,wBAJA;;AAMA;AACA,OAzBA;AA0BA,KA9nBA;;AAgoBA,iBAhoBA,2BAgoBA;AACA;AACA,qBADA;AAEA;AACA,wBAHA,CAGA;AAHA;AAKA;AACA;AACA;AACA,KAzoBA;;AA2oBA;;;;;AAKA,sBAhpBA,8BAgpBA,MAhpBA,EAgpBA;AACA;AACA;AACA;AACA;AACA,SAFA,MAEA;AACA;AACA;;AAEA;AACA;AACA,gCADA,EADA;;AAIA;AACA;AACA;AACA,SAPA;;AASA,OAhBA;AAiBA,KAnqBA;;AAqqBA;;;;;AAKA,sBA1qBA,8BA0qBA,MA1qBA,EA0qBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qFADA,CACA;;AAEA;AACA;AACA,0CADA,EADA;;AAIA;AACA;AACA;AACA,WAPA;;AASA,SAZA,MAYA;AACA;AACA,gEAFA,CAEA;AACA;AACA,OApBA;AAqBA,KApsBA;;AAssBA;;;;;AAKA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KA7uBA;AA8uBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BADA;AAEA,sBAFA;AAGA,4BAHA;AAIA,sBAJA;AAKA,4BALA;AAMA,uBANA;AAOA,6BAPA;AAQA,wBARA;AASA,2BATA;AAUA,wBAVA;AAWA,8BAXA;AAYA,wBAZA;AAaA,8BAdA;AAeA;AACA;AACA,WAlBA,EAkBA,CAlBA;AAmBA,SA5BA;AA6BA;;AAEA;AACA,KApxBA;;AAsxBA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cADA;AAEA,gBAFA;AAGA,kBAHA;AAIA,uBAJA;;AAMA;AACA,qCADA;AAEA,uBAFA;AAGA,mBAHA;AAIA,4BAJA;;AAMA;AACA;AACA;AACA,kBADA;AAEA;AACA,4BADA;AAEA,4BAFA,EAFA;;AAMA,wBANA;AAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kKAVA,CAUA;AACA;;AAEA;AACA;AACA;AACA,wCADA;AAEA,8BAFA,EADA;;AAKA;;AAEA;AACA;AACA,eAFA,MAEA;AACA;AACA,eAZA,CAYA;;AAEA;AACA;AACA,eAFA,MAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WA7CA;AA8CA;AACA;AACA;AACA,WAjDA;;AAmDA,OApDA;AAqDA,KAv2BA;AAw2BA;AACA;AACA,uCAFA,CAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0BADA;AAEA,kCAFA;;AAIA,cAJA,CAIA;AACA;AACA,WANA;AAOA,eAPA,CAOA,cAPA;AAQA,SATA,MASA;AACA;AACA,wBAFA,CAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BADA;AAEA,kCAFA;AAGA,gCAHA;;AAKA,cALA,CAKA;AACA;AACA,WAPA;AAQA,eARA,CAQA,cARA;AASA;;AAEA;AACA;;AAEA;AACA,KAn5BA;;AAq5BA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,uCADA,EADA;;AAIA;AACA;AACA,qCADA;;AAGA,SARA;;AAUA;AACA,OAbA,EAFA,CAeA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yCADA;AAEA,6CAFA,EADA;;AAKA;AACA;AACA,uCADA;;AAGA,WATA;;AAWA;;AAEA;AACA,OAlBA,EAjBA,CAmCA;;AAEA;AACA;AACA;AACA;AACA;AACA,uCADA;AAEA,2CAFA,EADA;;AAKA;AACA;AACA,sFAFA,CAEA;AACA;AACA;AACA;;AAEA;AACA,iCADA;AAEA,yCAFA;;AAIA,SAhBA;;AAkBA;AACA,OAtBA,EArCA,CA2DA;;AAEA;AACA;AACA;AACA;AACA;AACA,uCADA;AAEA,2CAFA,EADA;;AAKA;AACA;AACA;AACA;AACA,mCADA;AAEA,2CAFA;;AAIA;AACA,SAbA;;AAeA;AACA,OAnBA,EA7DA,CAgFA;;AAEA;AACA;AACA;AACA;AACA;AACA,uCADA;AAEA,2CAFA,EADA;;AAKA;AACA,sFADA,CACA;AACA;AACA;;AAEA;AACA,iCADA;AAEA,yCAFA;;AAIA,SAdA;;AAgBA;AACA,OApBA,EAlFA,CAsGA;;AAEA;AACA;AACA;AACA;AACA;AACA,uCADA;AAEA,2CAFA,EADA;;AAKA;AACA;AACA;AACA;AACA,mCADA;AAEA,2CAFA;;AAIA;AACA,SAbA;;AAeA;AACA,OAnBA;AAoBA,KAphCA;;AAshCA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sCADA;;;AAIA;;AAEA;AACA;;AAEA;AACA,sCADA;;;AAIA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBADA;AAEA,4BAFA;;;AAKA;;AAEA;AACA;;AAEA;AACA,sBADA;AAEA,4BAFA;;;AAKA;;AAEA;AACA;;AAEA;AACA,sBADA;AAEA,4BAFA;;;AAKA;;AAEA;AACA;;AAEA;AACA,sBADA;AAEA,4BAFA;;;AAKA;;AAEA;AACA;;AAEA;AACA,sBADA;AAEA,4BAFA;;;AAKA;;AAEA;AACA;;AAEA;AACA,sBADA;AAEA,4BAFA;;;AAKA;;AAEA;AACA,wCADA,CACA;;AAEA;;AAEA;AACA;AACA;AACA,iCAHA,CAGA;;AAEA;AACA;AACA,iCADA,EADA;;AAIA;AACA;AACA;AACA;AACA,sCADA,EADA;;AAIA;AACA;AACA;AACA,eAPA;;AASA,aAfA;;AAiBA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCA5KA;;;AA+KA;AACA,mBADA;;AAGA,KAjtCA;AAktCA;AACA;AACA;AACA,KArtCA;AAstCA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBADA;AAEA,0BAFA;;AAIA,OARA,CAQA;AACA;AACA;AACA,KAruCA;AAsuCA;AACA;AACA;AACA,KAzuCA;AA0uCA;AACA;AACA;AACA,KA7uCA;AA8uCA;AACA;AACA;AACA,KAjvCA;AAkvCA;AACA;AACA;AACA;AACA;AACA,KAvvCA;AAwvCA;AACA;AACA;AACA,KA3vCA;AA4vCA;AACA;AACA;AACA;AACA,kDADA;AAEA,0DAFA;;;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA,KA3wCA;AA4wCA;AACA;AACA;AACA,KA/wCA;;AAixCA;;;;AAIA;AACA;;AAEA;AACA;AACA,iCAFA,CAEA;;AAEA;AACA;AACA,SANA,CAMA;;AAEA;AACA,mCADA;AAEA,8CAFA;AAGA,0CAHA;;AAKA;AACA;AACA,KAvyCA;;AAyyCA,kBAzyCA,4BAyyCA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA,KA/yCA;;AAizCA,kBAjzCA,4BAizCA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA,KAvzCA;;AAyzCA,6BAzzCA,qCAyzCA,KAzzC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","file":"components/trtc-room/trtc-room.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./trtc-room.vue?vue&type=template&id=62884a08&\"\nvar renderjs\nimport script from \"./trtc-room.vue?vue&type=script&lang=js&\"\nexport * from \"./trtc-room.vue?vue&type=script&lang=js&\"\nimport style0 from \"./trtc-room.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"components/trtc-room/trtc-room.vue\"\nexport default component.exports","export * from \"-!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--16-0!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./trtc-room.vue?vue&type=template&id=62884a08&\"","var components\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  var g0 = JSON.stringify(_vm.streamList)\n  _vm.$mp.data = Object.assign(\n    {},\n    {\n      $root: {\n        g0: g0\n      }\n    }\n  )\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./trtc-room.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./trtc-room.vue?vue&type=script&lang=js&\"","<template>\r\n\t<view>\r\n\t\t<view class=\"trtc-room-container\">\r\n\t\t\t<view v-if=\"template === '1v1'\">\r\n\t\t\t\t<view data-type=\"template\" data-is=\"1v1\" data-attr=\"pusher, streamList, debug\">\r\n\t\t\t\t\t<view class=\"template-1v1\">\r\n\t\t\t\t\t\t<view\r\n\t\t\t\t\t\t\tv-for=\"(item, streamID) in streamList\"\r\n\t\t\t\t\t\t\t:key=\"streamID\"\r\n\t\t\t\t\t\t\tv-if=\"item.src && (item.hasVideo || item.hasAudio)\"\r\n\t\t\t\t\t\t\t:class=\"'view-container player-container ' + (item.isVisible ? '' : 'none')\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<live-player\r\n\t\t\t\t\t\t\t\tclass=\"player\"\r\n\t\t\t\t\t\t\t\t:data-userid=\"item.userID\"\r\n\t\t\t\t\t\t\t\t:data-streamid=\"item.streamID\"\r\n\t\t\t\t\t\t\t\t:data-streamtype=\"item.streamType\"\r\n\t\t\t\t\t\t\t\t:src=\"item.src\"\r\n\t\t\t\t\t\t\t\tmode=\"RTC\"\r\n\t\t\t\t\t\t\t\t:autoplay=\"item.autoplay\"\r\n\t\t\t\t\t\t\t\t:mute-audio=\"item.muteAudio\"\r\n\t\t\t\t\t\t\t\t:mute-video=\"item.muteVideo\"\r\n\t\t\t\t\t\t\t\t:orientation=\"item.orientation\"\r\n\t\t\t\t\t\t\t\t:object-fit=\"item.objectFit\"\r\n\t\t\t\t\t\t\t\t:background-mute=\"item.enableBackgroundMute\"\r\n\t\t\t\t\t\t\t\t:min-cache=\"item.minCache\"\r\n\t\t\t\t\t\t\t\t:max-cache=\"item.maxCache\"\r\n\t\t\t\t\t\t\t\t:sound-mode=\"item.soundMode\"\r\n\t\t\t\t\t\t\t\t:enable-recv-message=\"item.enableRecvMessage\"\r\n\t\t\t\t\t\t\t\t:auto-pause-if-navigate=\"item.autoPauseIfNavigate\"\r\n\t\t\t\t\t\t\t\t:auto-pause-if-open-native=\"item.autoPauseIfOpenNative\"\r\n\t\t\t\t\t\t\t\t:debug=\"debug\"\r\n\t\t\t\t\t\t\t\t@statechange=\"playerStateChangeFun\"\r\n\t\t\t\t\t\t\t\t@fullscreenchange=\"playerFullscreenChangeFun\"\r\n\t\t\t\t\t\t\t\t@netstatus=\"playerNetStatusFun\"\r\n\t\t\t\t\t\t\t\t@audiovolumenotify=\"playerAudioVolumeNotifyFun\"\r\n\t\t\t\t\t\t\t\t:idAttr=\"item.streamID\"\r\n\t\t\t\t\t\t\t></live-player>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t<view :class=\"'view-container pusher-container ' + (pusher.isVisible ? '' : 'none') + ' ' + (JSON.stringify(streamList) == '[]' ? 'fullscreen' : '')\">\r\n\t\t\t\t\t\t\t<live-pusher\r\n\t\t\t\t\t\t\t\tclass=\"pusher\"\r\n\t\t\t\t\t\t\t\t:url=\"pusher.url\"\r\n\t\t\t\t\t\t\t\t:mode=\"pusher.mode\"\r\n\t\t\t\t\t\t\t\t:autopush=\"pusher.autopush\"\r\n\t\t\t\t\t\t\t\t:enable-camera=\"pusher.enableCamera\"\r\n\t\t\t\t\t\t\t\t:enable-mic=\"pusher.enableMic\"\r\n\t\t\t\t\t\t\t\t:enable-agc=\"pusher.enableAgc\"\r\n\t\t\t\t\t\t\t\t:enable-ans=\"pusher.enableAns\"\r\n\t\t\t\t\t\t\t\t:enable-ear-monitor=\"pusher.enableEarMonitor\"\r\n\t\t\t\t\t\t\t\t:auto-focus=\"pusher.enableAutoFocus\"\r\n\t\t\t\t\t\t\t\t:zoom=\"pusher.enableZoom\"\r\n\t\t\t\t\t\t\t\t:min-bitrate=\"pusher.minBitrate\"\r\n\t\t\t\t\t\t\t\t:max-bitrate=\"pusher.maxBitrate\"\r\n\t\t\t\t\t\t\t\t:video-width=\"pusher.videoWidth\"\r\n\t\t\t\t\t\t\t\t:video-height=\"pusher.videoHeight\"\r\n\t\t\t\t\t\t\t\t:beauty=\"pusher.beautyLevel\"\r\n\t\t\t\t\t\t\t\t:whiteness=\"pusher.whitenessLevel\"\r\n\t\t\t\t\t\t\t\t:orientation=\"pusher.videoOrientation\"\r\n\t\t\t\t\t\t\t\t:aspect=\"pusher.videoAspect\"\r\n\t\t\t\t\t\t\t\t:device-position=\"pusher.frontCamera\"\r\n\t\t\t\t\t\t\t\t:remote-mirror=\"pusher.enableRemoteMirror\"\r\n\t\t\t\t\t\t\t\t:local-mirror=\"pusher.localMirror\"\r\n\t\t\t\t\t\t\t\t:background-mute=\"pusher.enableBackgroundMute\"\r\n\t\t\t\t\t\t\t\t:audio-quality=\"pusher.audioQuality\"\r\n\t\t\t\t\t\t\t\t:audio-volume-type=\"pusher.audioVolumeType\"\r\n\t\t\t\t\t\t\t\t:audio-reverb-type=\"pusher.audioReverbType\"\r\n\t\t\t\t\t\t\t\t:waiting-image=\"pusher.waitingImage\"\r\n\t\t\t\t\t\t\t\t:debug=\"debug\"\r\n\t\t\t\t\t\t\t\t@statechange=\"pusherStateChangeHandlerFun\"\r\n\t\t\t\t\t\t\t\t@netstatus=\"pusherNetStatusHandlerFun\"\r\n\t\t\t\t\t\t\t\t@error=\"pusherErrorHandlerFun\"\r\n\t\t\t\t\t\t\t\t@bgmstart=\"pusherBGMStartHandlerFun\"\r\n\t\t\t\t\t\t\t\t@bgmprogress=\"pusherBGMProgressHandlerFun\"\r\n\t\t\t\t\t\t\t\t@bgmcomplete=\"pusherBGMCompleteHandlerFun\"\r\n\t\t\t\t\t\t\t></live-pusher>\r\n\t\t\t\t\t\t\t<view class=\"loading\" v-if=\"streamList.length === 0\">\r\n\t\t\t\t\t\t\t\t<view class=\"loading-img\"><image src=\"../../static/components/trtc-room/static/loading.png\" class=\"rotate-img\"></image></view>\r\n\t\t\t\t\t\t\t\t<view class=\"loading-text\">等待接听中...</view>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t<view class=\"handle-btns\">\r\n\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"toggleAudioFun\">\r\n\t\t\t\t\t\t\t\t<image\r\n\t\t\t\t\t\t\t\t\t:src=\"pusher.enableMic ? '../../static/components/trtc-room/static/audio-true.png' : '../../static/components/trtc-room/static/audio-false.png'\"\r\n\t\t\t\t\t\t\t\t></image>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"switchCamera\"><image src=\"../../static/components/trtc-room/static/switch.png\"></image></view>\r\n\t\t\t\t\t\t\t<!-- <view class=\"btn-normal\" bindtap=\"toggleVideoFun\">\r\n        <image src=\"{{pusher.enableCamera? '../../static/components/trtc-room/static/camera-true.png': '../../static/components/trtc-room/static/camera-false.png'}} \"></image>\r\n      </view> -->\r\n\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"toggleSoundModeFun\">\r\n\t\t\t\t\t\t\t\t<image\r\n\t\t\t\t\t\t\t\t\t:src=\"\r\n\t\t\t\t\t\t\t\t\t\tstreamList[0].soundMode === 'ear'\r\n\t\t\t\t\t\t\t\t\t\t\t? '../../static/components/trtc-room/static/phone.png'\r\n\t\t\t\t\t\t\t\t\t\t\t: '../../static/components/trtc-room/static/speaker-true.png'\r\n\t\t\t\t\t\t\t\t\t\"\r\n\t\t\t\t\t\t\t\t></image>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t<view class=\"bottom-btns\">\r\n\t\t\t\t\t\t\t<view class=\"btn-hangup\" @tap=\"hangUpFun\"><image src=\"../../static/components/trtc-room/static/hangup.png\"></image></view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t<view v-if=\"template === 'grid'\">\r\n\t\t\t\t<view data-type=\"template\" data-is=\"grid\" data-attr=\"pusher, streamList, debug, panelName\">\r\n\t\t\t\t\t<view :class=\"'template-grid ' + (streamList.length < 6 ? 'stream-' + streamList.length : 'stream-5')\">\r\n\t\t\t\t\t\t<view\r\n\t\t\t\t\t\t\tv-for=\"(item, streamID) in streamList\"\r\n\t\t\t\t\t\t\t:key=\"streamID\"\r\n\t\t\t\t\t\t\tv-if=\"item.src && (item.hasVideo || item.hasAudio)\"\r\n\t\t\t\t\t\t\t:class=\"'view-container player-container ' + (item.isVisible ? '' : 'none')\"\r\n\t\t\t\t\t\t\t:data-userid=\"item.userID\"\r\n\t\t\t\t\t\t\t:data-streamtype=\"item.streamType\"\r\n\t\t\t\t\t\t\t@tap=\"doubleTabToggleFullscreenFun\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<live-player\r\n\t\t\t\t\t\t\t\tclass=\"player\"\r\n\t\t\t\t\t\t\t\t:data-userid=\"item.userID\"\r\n\t\t\t\t\t\t\t\t:data-streamid=\"item.streamID\"\r\n\t\t\t\t\t\t\t\t:data-streamtype=\"item.streamType\"\r\n\t\t\t\t\t\t\t\t:src=\"item.src\"\r\n\t\t\t\t\t\t\t\tmode=\"RTC\"\r\n\t\t\t\t\t\t\t\t:autoplay=\"item.autoplay\"\r\n\t\t\t\t\t\t\t\t:mute-audio=\"item.muteAudio\"\r\n\t\t\t\t\t\t\t\t:mute-video=\"item.muteVideo\"\r\n\t\t\t\t\t\t\t\t:orientation=\"item.orientation\"\r\n\t\t\t\t\t\t\t\t:object-fit=\"item.objectFit\"\r\n\t\t\t\t\t\t\t\t:background-mute=\"item.enableBackgroundMute\"\r\n\t\t\t\t\t\t\t\t:min-cache=\"item.minCache\"\r\n\t\t\t\t\t\t\t\t:max-cache=\"item.maxCache\"\r\n\t\t\t\t\t\t\t\t:sound-mode=\"item.soundMode\"\r\n\t\t\t\t\t\t\t\t:enable-recv-message=\"item.enableRecvMessage\"\r\n\t\t\t\t\t\t\t\t:auto-pause-if-navigate=\"item.autoPauseIfNavigate\"\r\n\t\t\t\t\t\t\t\t:auto-pause-if-open-native=\"item.autoPauseIfOpenNative\"\r\n\t\t\t\t\t\t\t\t:debug=\"debug\"\r\n\t\t\t\t\t\t\t\t@statechange=\"playerStateChangeFun\"\r\n\t\t\t\t\t\t\t\t@fullscreenchange=\"playerFullscreenChangeFun\"\r\n\t\t\t\t\t\t\t\t@netstatus=\"playerNetStatusFun\"\r\n\t\t\t\t\t\t\t\t@audiovolumenotify=\"playerAudioVolumeNotifyFun\"\r\n\t\t\t\t\t\t\t\t:idAttr=\"item.streamID\"\r\n\t\t\t\t\t\t\t></live-player>\r\n\t\t\t\t\t\t\t<view class=\"operation-bar\">\r\n\t\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"handleSubscribeRemoteAudioFun\" :data-user-i-d=\"item.userID\" :data-stream-type=\"item.streamType\">\r\n\t\t\t\t\t\t\t\t\t<image\r\n\t\t\t\t\t\t\t\t\t\t:src=\"\r\n\t\t\t\t\t\t\t\t\t\t\titem.muteAudio\r\n\t\t\t\t\t\t\t\t\t\t\t\t? '../../static/components/trtc-room/static/speaker-false.png'\r\n\t\t\t\t\t\t\t\t\t\t\t\t: '../../static/components/trtc-room/static/speaker-true.png'\r\n\t\t\t\t\t\t\t\t\t\t\"\r\n\t\t\t\t\t\t\t\t\t></image>\r\n\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"handleSubscribeRemoteVideoFun\" :data-user-i-d=\"item.userID\" :data-stream-type=\"item.streamType\">\r\n\t\t\t\t\t\t\t\t\t<image\r\n\t\t\t\t\t\t\t\t\t\t:src=\"\r\n\t\t\t\t\t\t\t\t\t\t\titem.muteVideo\r\n\t\t\t\t\t\t\t\t\t\t\t\t? '../../static/components/trtc-room/static/camera-false.png'\r\n\t\t\t\t\t\t\t\t\t\t\t\t: '../../static/components/trtc-room/static/camera-true.png'\r\n\t\t\t\t\t\t\t\t\t\t\"\r\n\t\t\t\t\t\t\t\t\t></image>\r\n\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"toggleFullscreenFun\" :data-user-i-d=\"item.userID\" :data-stream-type=\"item.streamType\">\r\n\t\t\t\t\t\t\t\t\t<image src=\"../../static/components/trtc-room/static/fullscreen.png\"></image>\r\n\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t<progress class=\"volume-progress\" :percent=\"item.volume\" stroke-width=\"4\"></progress>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t<view :class=\"'view-container pusher-container ' + (pusher.isVisible ? '' : 'none')\">\r\n\t\t\t\t\t\t\t<live-pusher\r\n\t\t\t\t\t\t\t\tclass=\"pusher\"\r\n\t\t\t\t\t\t\t\t:url=\"pusher.url\"\r\n\t\t\t\t\t\t\t\t:mode=\"pusher.mode\"\r\n\t\t\t\t\t\t\t\t:autopush=\"pusher.autopush\"\r\n\t\t\t\t\t\t\t\t:enable-camera=\"pusher.enableCamera\"\r\n\t\t\t\t\t\t\t\t:enable-mic=\"pusher.enableMic\"\r\n\t\t\t\t\t\t\t\t:enable-agc=\"pusher.enableAgc\"\r\n\t\t\t\t\t\t\t\t:enable-ans=\"pusher.enableAns\"\r\n\t\t\t\t\t\t\t\t:enable-ear-monitor=\"pusher.enableEarMonitor\"\r\n\t\t\t\t\t\t\t\t:auto-focus=\"pusher.enableAutoFocus\"\r\n\t\t\t\t\t\t\t\t:zoom=\"pusher.enableZoom\"\r\n\t\t\t\t\t\t\t\t:min-bitrate=\"pusher.minBitrate\"\r\n\t\t\t\t\t\t\t\t:max-bitrate=\"pusher.maxBitrate\"\r\n\t\t\t\t\t\t\t\t:video-width=\"pusher.videoWidth\"\r\n\t\t\t\t\t\t\t\t:video-height=\"pusher.videoHeight\"\r\n\t\t\t\t\t\t\t\t:beauty=\"pusher.beautyLevel\"\r\n\t\t\t\t\t\t\t\t:whiteness=\"pusher.whitenessLevel\"\r\n\t\t\t\t\t\t\t\t:orientation=\"pusher.videoOrientation\"\r\n\t\t\t\t\t\t\t\t:aspect=\"pusher.videoAspect\"\r\n\t\t\t\t\t\t\t\t:device-position=\"pusher.frontCamera\"\r\n\t\t\t\t\t\t\t\t:remote-mirror=\"pusher.enableRemoteMirror\"\r\n\t\t\t\t\t\t\t\t:local-mirror=\"pusher.localMirror\"\r\n\t\t\t\t\t\t\t\t:background-mute=\"pusher.enableBackgroundMute\"\r\n\t\t\t\t\t\t\t\t:audio-quality=\"pusher.audioQuality\"\r\n\t\t\t\t\t\t\t\t:audio-volume-type=\"pusher.audioVolumeType\"\r\n\t\t\t\t\t\t\t\t:audio-reverb-type=\"pusher.audioReverbType\"\r\n\t\t\t\t\t\t\t\t:waiting-image=\"pusher.waitingImage\"\r\n\t\t\t\t\t\t\t\t:debug=\"debug\"\r\n\t\t\t\t\t\t\t\t@statechange=\"pusherStateChangeHandlerFun\"\r\n\t\t\t\t\t\t\t\t@netstatus=\"pusherNetStatusHandlerFun\"\r\n\t\t\t\t\t\t\t\t@error=\"pusherErrorHandlerFun\"\r\n\t\t\t\t\t\t\t\t@bgmstart=\"pusherBGMStartHandlerFun\"\r\n\t\t\t\t\t\t\t\t@bgmprogress=\"pusherBGMProgressHandlerFun\"\r\n\t\t\t\t\t\t\t\t@bgmcomplete=\"pusherBGMCompleteHandlerFun\"\r\n\t\t\t\t\t\t\t></live-pusher>\r\n\t\t\t\t\t\t\t<view class=\"operation-bar\">\r\n\t\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"switchMemberListPanelFun\"><image src=\"../../static/components/trtc-room/static/list.png\"></image></view>\r\n\t\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"switchSettingPanelFun\"><image src=\"../../static/components/trtc-room/static/setting.png\"></image></view>\r\n\t\t\t\t\t\t\t\t<view class=\"btn-normal btn-hangup\" @tap=\"hangUpFun\"><image src=\"../../static/components/trtc-room/static/hangup.png\"></image></view>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t<view :class=\"'panel memberlist-panel ' + (panelName === 'memberlist-panel' ? '' : 'none')\">\r\n\t\t\t\t\t\t\t<view @tap=\"handleMaskerClickFun\" class=\"close-btn\">X</view>\r\n\t\t\t\t\t\t\t<view class=\"panel-header\">成员列表</view>\r\n\t\t\t\t\t\t\t<view class=\"panel-body\">\r\n\t\t\t\t\t\t\t\t<view class=\"panel-tips\" v-if=\"streamList.length === 0\">暂无成员</view>\r\n\t\t\t\t\t\t\t\t<scroll-view class=\"scroll-container\" scroll-y=\"true\">\r\n\t\t\t\t\t\t\t\t\t<view class=\"member-item\" v-for=\"(item, streamID) in streamList\" :key=\"streamID\">\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"member-id\">{{ item.userID }}</view>\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"member-btns\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"btn\"\r\n\t\t\t\t\t\t\t\t\t\t\t\thover-class=\"btn-hover\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:data-userid=\"item.userID\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:data-streamtype=\"item.streamType\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-key=\"objectFit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-value=\"fillCrop|contain\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t@tap=\"setPlayerPropertyFun\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{{ item.objectFit === 'fillCrop' ? '填充' : '适应' }}\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"btn\"\r\n\t\t\t\t\t\t\t\t\t\t\t\thover-class=\"btn-hover\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:data-userid=\"item.userID\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:data-streamtype=\"item.streamType\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-key=\"orientation\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-value=\"vertical|horizontal\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t@tap=\"setPlayerPropertyFun\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{{ item.orientation === 'vertical' ? '竖屏' : '横屏' }}\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"btn\"\r\n\t\t\t\t\t\t\t\t\t\t\t\thover-class=\"btn-hover\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:data-userid=\"item.userID\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:data-streamtype=\"item.streamType\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t@tap=\"switchStreamTypeFun\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tv-if=\"item.streamType === 'main'\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{{ item._definitionType === 'small' ? '小画面' : '主画面' }}\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button class=\"btn\" hover-class=\"btn-hover\" :data-userid=\"item.userID\" :data-streamtype=\"item.streamType\" @tap=\"handleSnapshotClickFun\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t截屏\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t</scroll-view>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t<view :class=\"'panel setting-panel ' + (panelName === 'setting-panel' ? '' : 'none')\">\r\n\t\t\t\t\t\t\t<view @tap=\"handleMaskerClickFun\" class=\"close-btn\">X</view>\r\n\t\t\t\t\t\t\t<view class=\"panel-header\">推流设置</view>\r\n\t\t\t\t\t\t\t<view class=\"panel-body\">\r\n\t\t\t\t\t\t\t\t<scroll-view class=\"scroll-container\" scroll-y=\"true\">\r\n\t\t\t\t\t\t\t\t\t<view class=\"setting-option\">\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">启用摄像头</view>\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"toggleVideoFun\">\r\n\t\t\t\t\t\t\t\t\t\t\t<image\r\n\t\t\t\t\t\t\t\t\t\t\t\t:src=\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpusher.enableCamera\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? '../../static/components/trtc-room/static/camera-true.png'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: '../../static/components/trtc-room/static/camera-false.png'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n\t\t\t\t\t\t\t\t\t\t\t></image>\r\n\t\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t<view class=\"setting-option\">\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">启用麦克风</view>\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"toggleAudioFun\">\r\n\t\t\t\t\t\t\t\t\t\t\t<image\r\n\t\t\t\t\t\t\t\t\t\t\t\t:src=\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpusher.enableMic\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? '../../static/components/trtc-room/static/audio-true.png'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: '../../static/components/trtc-room/static/audio-false.png'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n\t\t\t\t\t\t\t\t\t\t\t></image>\r\n\t\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t<view class=\"setting-option\">\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">切换摄像头</view>\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"switchCamera\"><image src=\"../../static/components/trtc-room/static/switch.png\"></image></view>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t<view class=\"setting-option\">\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">开启美颜</view>\r\n\t\t\t\t\t\t\t\t\t\t<switch\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"#006eff\"\r\n\t\t\t\t\t\t\t\t\t\t\t:checked=\"pusher.beautyLevel == 9 ? true : false\"\r\n\t\t\t\t\t\t\t\t\t\t\tdata-key=\"beautyLevel\"\r\n\t\t\t\t\t\t\t\t\t\t\tdata-value=\"9|0\"\r\n\t\t\t\t\t\t\t\t\t\t\t@change=\"setPuserPropertyFun\"\r\n\t\t\t\t\t\t\t\t\t\t></switch>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t<view class=\"setting-option\">\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">开启AGC</view>\r\n\t\t\t\t\t\t\t\t\t\t<switch color=\"#006eff\" :checked=\"pusher.enableAgc\" data-key=\"enableAgc\" data-value=\"true\" @change=\"setPuserPropertyFun\"></switch>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t<view class=\"setting-option\">\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">开启ANS</view>\r\n\t\t\t\t\t\t\t\t\t\t<switch color=\"#006eff\" :checked=\"pusher.enableAns\" data-key=\"enableAns\" data-value=\"true\" @change=\"setPuserPropertyFun\"></switch>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t<view class=\"setting-option\">\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">开启横屏推流</view>\r\n\t\t\t\t\t\t\t\t\t\t<switch\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"#006eff\"\r\n\t\t\t\t\t\t\t\t\t\t\t:checked=\"pusher.videoOrientation === 'vertical' ? false : true\"\r\n\t\t\t\t\t\t\t\t\t\t\tdata-key=\"videoOrientation\"\r\n\t\t\t\t\t\t\t\t\t\t\tdata-value=\"horizontal|vertical\"\r\n\t\t\t\t\t\t\t\t\t\t\t@change=\"setPuserPropertyFun\"\r\n\t\t\t\t\t\t\t\t\t\t></switch>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t</scroll-view>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t<view :class=\"'masker ' + (panelName == '' ? 'none' : '')\" @tap=\"handleMaskerClickFun\"></view>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t<view v-if=\"template === 'custom'\">\r\n\t\t\t\t<view data-type=\"template\" data-is=\"custom\" data-attr=\"pusher, streamList, debug\">\r\n\t\t\t\t\t<view class=\"template-custom\">\r\n\t\t\t\t\t\t<view class=\"players-container\">\r\n\t\t\t\t\t\t\t<view\r\n\t\t\t\t\t\t\t\tv-for=\"(item, streamID) in streamList\"\r\n\t\t\t\t\t\t\t\t:key=\"streamID\"\r\n\t\t\t\t\t\t\t\tv-if=\"item.src && (item.hasVideo || item.hasAudio)\"\r\n\t\t\t\t\t\t\t\t:class=\"'view-container player-container ' + (item.isVisible ? '' : 'none')\"\r\n\t\t\t\t\t\t\t\t:style=\"'left:' + item.xAxis + 'top:' + item.yAxis + 'width:' + item.width + 'height:' + item.height + 'zindex:' + item.zindex + ''\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<live-player\r\n\t\t\t\t\t\t\t\t\tclass=\"player\"\r\n\t\t\t\t\t\t\t\t\t:data-userid=\"item.userID\"\r\n\t\t\t\t\t\t\t\t\t:data-streamid=\"item.streamID\"\r\n\t\t\t\t\t\t\t\t\t:data-streamtype=\"item.streamType\"\r\n\t\t\t\t\t\t\t\t\t:src=\"item.src\"\r\n\t\t\t\t\t\t\t\t\t:mode=\"item.mode\"\r\n\t\t\t\t\t\t\t\t\t:autoplay=\"item.autoplay\"\r\n\t\t\t\t\t\t\t\t\t:mute-audio=\"item.muteAudio\"\r\n\t\t\t\t\t\t\t\t\t:mute-video=\"item.muteVideo\"\r\n\t\t\t\t\t\t\t\t\t:orientation=\"item.orientation\"\r\n\t\t\t\t\t\t\t\t\t:object-fit=\"item.objectFit\"\r\n\t\t\t\t\t\t\t\t\t:background-mute=\"item.enableBackgroundMute\"\r\n\t\t\t\t\t\t\t\t\t:min-cache=\"item.minCache\"\r\n\t\t\t\t\t\t\t\t\t:max-cache=\"item.maxCache\"\r\n\t\t\t\t\t\t\t\t\t:sound-mode=\"item.soundMode\"\r\n\t\t\t\t\t\t\t\t\t:enable-recv-message=\"item.enableRecvMessage\"\r\n\t\t\t\t\t\t\t\t\t:auto-pause-if-navigate=\"item.autoPauseIfNavigate\"\r\n\t\t\t\t\t\t\t\t\t:auto-pause-if-open-native=\"item.autoPauseIfOpenNative\"\r\n\t\t\t\t\t\t\t\t\t:debug=\"debug\"\r\n\t\t\t\t\t\t\t\t\t@statechange=\"playerStateChangeFun\"\r\n\t\t\t\t\t\t\t\t\t@fullscreenchange=\"playerFullscreenChangeFun\"\r\n\t\t\t\t\t\t\t\t\t@netstatus=\"playerNetStatusFun\"\r\n\t\t\t\t\t\t\t\t\t@audiovolumenotify=\"playerAudioVolumeNotifyFun\"\r\n\t\t\t\t\t\t\t\t\t:idAttr=\"item.streamID\"\r\n\t\t\t\t\t\t\t\t></live-player>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t<view\r\n\t\t\t\t\t\t\t:class=\"'view-container pusher-container ' + (pusher.isVisible ? '' : 'none')\"\r\n\t\t\t\t\t\t\t:style=\"'left:' + pusher.xAxis + 'top:' + pusher.yAxis + 'width:' + pusher.width + 'height:' + pusher.height + 'zindex:' + pusher.zindex + ''\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<live-pusher\r\n\t\t\t\t\t\t\t\tclass=\"pusher\"\r\n\t\t\t\t\t\t\t\t:url=\"pusher.url\"\r\n\t\t\t\t\t\t\t\t:mode=\"pusher.mode\"\r\n\t\t\t\t\t\t\t\t:autopush=\"pusher.autopush\"\r\n\t\t\t\t\t\t\t\t:enable-camera=\"pusher.enableCamera\"\r\n\t\t\t\t\t\t\t\t:enable-mic=\"pusher.enableMic\"\r\n\t\t\t\t\t\t\t\t:enable-agc=\"pusher.enableAgc\"\r\n\t\t\t\t\t\t\t\t:enable-ans=\"pusher.enableAns\"\r\n\t\t\t\t\t\t\t\t:enable-ear-monitor=\"pusher.enableEarMonitor\"\r\n\t\t\t\t\t\t\t\t:auto-focus=\"pusher.enableAutoFocus\"\r\n\t\t\t\t\t\t\t\t:zoom=\"pusher.enableZoom\"\r\n\t\t\t\t\t\t\t\t:min-bitrate=\"pusher.minBitrate\"\r\n\t\t\t\t\t\t\t\t:max-bitrate=\"pusher.maxBitrate\"\r\n\t\t\t\t\t\t\t\t:video-width=\"pusher.videoWidth\"\r\n\t\t\t\t\t\t\t\t:video-height=\"pusher.videoHeight\"\r\n\t\t\t\t\t\t\t\t:beauty=\"pusher.beautyLevel\"\r\n\t\t\t\t\t\t\t\t:whiteness=\"pusher.whitenessLevel\"\r\n\t\t\t\t\t\t\t\t:orientation=\"pusher.videoOrientation\"\r\n\t\t\t\t\t\t\t\t:aspect=\"pusher.videoAspect\"\r\n\t\t\t\t\t\t\t\t:device-position=\"pusher.frontCamera\"\r\n\t\t\t\t\t\t\t\t:remote-mirror=\"pusher.enableRemoteMirror\"\r\n\t\t\t\t\t\t\t\t:local-mirror=\"pusher.localMirror\"\r\n\t\t\t\t\t\t\t\t:background-mute=\"pusher.enableBackgroundMute\"\r\n\t\t\t\t\t\t\t\t:audio-quality=\"pusher.audioQuality\"\r\n\t\t\t\t\t\t\t\t:audio-volume-type=\"pusher.audioVolumeType\"\r\n\t\t\t\t\t\t\t\t:audio-reverb-type=\"pusher.audioReverbType\"\r\n\t\t\t\t\t\t\t\t:waiting-image=\"pusher.waitingImage\"\r\n\t\t\t\t\t\t\t\t:debug=\"debug\"\r\n\t\t\t\t\t\t\t\t@statechange=\"pusherStateChangeHandlerFun\"\r\n\t\t\t\t\t\t\t\t@netstatus=\"pusherNetStatusHandlerFun\"\r\n\t\t\t\t\t\t\t\t@error=\"pusherErrorHandlerFun\"\r\n\t\t\t\t\t\t\t\t@bgmstart=\"pusherBGMStartHandlerFun\"\r\n\t\t\t\t\t\t\t\t@bgmprogress=\"pusherBGMProgressHandlerFun\"\r\n\t\t\t\t\t\t\t\t@bgmcomplete=\"pusherBGMCompleteHandlerFun\"\r\n\t\t\t\t\t\t\t></live-pusher>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t<view :class=\"'debug-info-btn ' + (debugMode && !debugPanel ? '' : 'none')\"><button @tap=\"debugTogglePanelFun\" hover-class=\"button-hover\">Debug</button></view>\r\n\t\t\t<view :class=\"'debug-info ' + (debugMode && debugPanel ? '' : 'none')\">\r\n\t\t\t\t<view @tap=\"debugTogglePanelFun\" class=\"close-btn\">X</view>\r\n\t\t\t\t<view>appVersion: {{ appVersion }}</view>\r\n\t\t\t\t<view>libVersion: {{ libVersion }}</view>\r\n\t\t\t\t<view>template: {{ template }}</view>\r\n\t\t\t\t<view>\r\n\t\t\t\t\tdebug:\r\n\t\t\t\t\t<button :class=\"debug ? '' : 'false'\" @tap=\"debugToggleVideoDebugFun\" hover-class=\"button-hover\">{{ debug }}</button>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view>userID: {{ pusher.userID }}</view>\r\n\t\t\t\t<view>roomID: {{ pusher.roomID }}</view>\r\n\t\t\t\t<view>\r\n\t\t\t\t\tcamera:\r\n\t\t\t\t\t<button :class=\"pusher.enableCamera ? '' : 'false'\" @tap=\"toggleVideoFun\" hover-class=\"button-hover\">{{ pusher.enableCamera }}</button>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view>\r\n\t\t\t\t\tmic:\r\n\t\t\t\t\t<button :class=\"pusher.enableMic ? '' : 'false'\" @tap=\"toggleAudioFun\" hover-class=\"button-hover\">{{ pusher.enableMic }}</button>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view>\r\n\t\t\t\t\tswitch camera:\r\n\t\t\t\t\t<button @tap=\"switchCamera\" hover-class=\"button-hover\">{{ cameraPosition || pusher.frontCamera }}</button>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view>\r\n\t\t\t\t\tRoom:\r\n\t\t\t\t\t<button @tap=\"debugEnterRoomFun\" hover-class=\"button-hover\">Enter</button>\r\n\t\t\t\t\t<button @tap=\"debugExitRoomFun\" hover-class=\"button-hover\">Exit</button>\r\n\t\t\t\t\t<button @tap=\"debugGoBackFun\" hover-class=\"button-hover\">Go back</button>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view>user count: {{ userList.length }}</view>\r\n\t\t\t\t<view v-for=\"(item, userID) in userList\" :key=\"userID\">\r\n\t\t\t\t\t{{ item.userID }}|mainV:{{ item.hasMainVideo || false }}|mainA:{{ item.hasMainAudio || false }}|auxV:{{ item.hasAuxVideo || false }}\r\n\t\t\t\t</view>\r\n\t\t\t\t<view>stream count: {{ streamList.length }}</view>\r\n\t\t\t\t<view v-for=\"(item, streamID) in streamList\" :key=\"streamID\">\r\n\t\t\t\t\t{{ item.userID }}|{{ item.streamType }}| SubV:\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\t:class=\"!item.muteVideo ? '' : 'false'\"\r\n\t\t\t\t\t\t@tap=\"debugToggleRemoteVideoFun\"\r\n\t\t\t\t\t\thover-class=\"button-hover\"\r\n\t\t\t\t\t\t:data-user-i-d=\"item.userID\"\r\n\t\t\t\t\t\t:data-stream-type=\"item.streamType\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{{ !item.muteVideo }}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t| SubA:\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\t:class=\"!item.muteAudio ? '' : 'false'\"\r\n\t\t\t\t\t\t@tap=\"debugToggleRemoteAudioFun\"\r\n\t\t\t\t\t\thover-class=\"button-hover\"\r\n\t\t\t\t\t\t:data-user-i-d=\"item.userID\"\r\n\t\t\t\t\t\t:data-stream-type=\"item.streamType\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{{ !item.muteAudio }}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\nimport { setData } from '../../debug/GenerateTestUserSig';\r\nimport UserController from './controller/user-controller';\r\nimport Pusher from './model/pusher';\r\nimport { EVENT } from './common/constants';\r\nimport Event from './utils/event';\r\nimport * as ENV from './utils/environment';\r\nconst TAG_NAME = 'TRTC-ROOM';\r\n\r\nexport default {\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tpusher: null,\r\n\t\t\t// debugMode: false, // 是否开启调试模式\r\n\t\t\tdebugPanel: true,\r\n\t\t\t// 是否打开组件调试面板\r\n\t\t\tdebug: false,\r\n\t\t\t// 是否打开player pusher 的调试信息\r\n\t\t\tstreamList: [],\r\n\t\t\t// 用于渲染player列表,存储stram\r\n\t\t\tuserList: [],\r\n\t\t\t// 扁平化的数据用来返回给用户\r\n\t\t\ttemplate: '',\r\n\t\t\t// 不能设置默认值，当默认值和传入组件的值不一致时，iOS渲染失败\r\n\t\t\tcameraPosition: '',\r\n\t\t\tpanelName: '',\r\n\t\t\t// 控制面板名称，包括 setting-panel  memberlist-panel\r\n\t\t\tlocalVolume: 0,\r\n\t\t\tremoteVolumeList: [],\r\n\t\t\tappVersion: ENV.APP_VERSION,\r\n\t\t\tlibVersion: ENV.LIB_VERSION,\r\n\t\t\tdebugMode: ''\r\n\t\t};\r\n\t},\r\n\r\n\tcomponents: {},\r\n\tprops: {\r\n\t\t// 必要的初始化参数\r\n\t\tconfig: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => ({\r\n\t\t\t\tsdkAppID: '',\r\n\t\t\t\tuserID: '',\r\n\t\t\t\tuserSig: '',\r\n\t\t\t\ttemplate: '',\r\n\t\t\t\tdebugMode: ''\r\n\t\t\t})\r\n\t\t}\r\n\t},\r\n\twatch: {\n\t\tstreamList(newVal, oldVal){\n\t\t\tconsole.log('streamList::::::::',newVal, oldVal)\n\t\t\tthis.streamList = newVal\n\t\t},\r\n\t\tconfig: {\r\n\t\t\thandler: function(newVal, oldVal) {\r\n\t\t\t\tconsole.log('watch config');\r\n\t\t\t\tthis.propertyObserverFun({\r\n\t\t\t\t\tname: 'config',\r\n\t\t\t\t\tnewVal,\r\n\t\t\t\t\toldVal\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tdeep: true\r\n\t\t}\r\n\t},\r\n\tcreated: function() {\r\n\t\t// 在组件实例刚刚被创建时执行\r\n\t\tconsole.log(TAG_NAME, 'created', ENV);\r\n\t},\r\n\tbeforeMount: function() {\r\n\t\t// 在组件实例进入页面节点树时执行\r\n\t\tconsole.log(TAG_NAME, 'attached');\r\n\t\tthis.initFun();\r\n\t},\r\n\tmounted: function() {\r\n\t\t// 在组件在视图层布局完成后执行\r\n\t\tconsole.log(TAG_NAME, 'ready');\r\n\t},\r\n\tdestroyed: function() {\r\n\t\t// 在组件实例被从页面节点树移除时执行\r\n\t\tconsole.log(TAG_NAME, 'detached'); // 停止所有拉流，并重置数据\r\n\r\n\t\tthis.exitRoom();\r\n\t},\r\n\terror: function(error) {\r\n\t\t// 每当组件方法抛出错误时执行\r\n\t\tconsole.log(TAG_NAME, 'error', error);\r\n\t},\r\n\tonPageShow: function() {\r\n\t\t// 组件所在的页面被展示时执行\r\n\t\tconsole.log(TAG_NAME, 'show status:', this.status);\r\n\r\n\t\tif (this.status.isPending) {\r\n\t\t\t// 经历了 5000 挂起事件\r\n\t\t\tthis.status.isPending = false;\r\n\t\t}\r\n\r\n\t\tif (this.status.isPush) {\r\n\t\t\t// 小程序hide - show 有一定概率本地黑屏或静止，远端正常，或者远端和本地同时黑屏或静止，需要手动启动预览，非必现\r\n\t\t\t// this.data.pusher.getPusherContext().startPreview()\r\n\t\t\t// this.data.pusher.getPusherContext().resume()\r\n\t\t}\r\n\t},\r\n\tonPageHide: function() {\r\n\t\t// 组件所在的页面被隐藏时执行\r\n\t\tconsole.log(TAG_NAME, 'hide');\r\n\t},\r\n\tonPageResize: function(size) {\r\n\t\t// 组件所在的页面尺寸变化时执行\r\n\t\tconsole.log(TAG_NAME, 'resize', size);\r\n\t},\r\n\tmethods: {\r\n\t\tsetData,\r\n\t\t/**\r\n\t\t * 初始化各项参数和用户控制模块，在组件实例触发 attached 时调用，此时不建议对View进行变更渲染（调用setData方法）\r\n\t\t */\r\n\t\tinitFun: function() {\r\n\t\t\tconsole.log(TAG_NAME, '_init');\r\n\t\t\tthis.userController = new UserController(this);\r\n\t\t\tthis._emitter = new Event();\r\n\t\t\tthis.EVENT = EVENT;\r\n\t\t\tthis.initStatusFun();\r\n\t\t\tthis.bindEventFun();\r\n\t\t\tthis.bindEventGridFun();\r\n\t\t\tconsole.log(TAG_NAME, '_init success component:', this);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 进房\r\n\t\t * @param {Object} params 必传 roomID 取值范围 1 ~ 4294967295\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\tenterRoom: function(params) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tconsole.log(TAG_NAME, 'enterRoom');\r\n\t\t\t\tconsole.log(TAG_NAME, 'params', params);\r\n\t\t\t\tconsole.log(TAG_NAME, 'config', this.config);\r\n\t\t\t\tconsole.log(TAG_NAME, 'pusher', this.pusher); // 1. 补齐进房参数，校验必要参数是否齐全\r\n\r\n\t\t\t\tconsole.log('进房......', params, this.config, this.pusher);\r\n\t\t\t\tif (params) {\r\n\t\t\t\t\tObject.assign(this.pusher, params);\r\n\t\t\t\t\tObject.assign(this.config, params);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!this.checkParamFun(this.config)) {\r\n\t\t\t\t\treject(new Error('缺少必要参数'));\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} // 2. 根据参数拼接 push url，赋值给 live-pusher，\r\n\r\n\t\t\t\tthis.getPushUrlFun(this.config)\r\n\t\t\t\t\t.then(pushUrl => {\r\n\t\t\t\t\t\tthis.pusher.url = pushUrl;\r\n\t\t\t\t\t\tthis.setData(\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tpusher: this.pusher\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t() => {\r\n\t\t\t\t\t\t\t\tconsole.log(TAG_NAME, 'enterRoom success', this.pusher); // view 渲染成功回调后，开始推流\r\n\r\n\t\t\t\t\t\t\t\tthis.pusher.getPusherContext().start();\r\n\t\t\t\t\t\t\t\tthis.status.isPush = true;\r\n\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(res => {\r\n\t\t\t\t\t\t// 获取 room sig 失败, 进房失败需要通过 pusher state 事件通知\r\n\t\t\t\t\t\tconsole.error(TAG_NAME, 'enterRoom fail', res);\r\n\t\t\t\t\t\treject(res);\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 退房，停止推流和拉流，并重置数据\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\texitRoom: function() {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tconsole.log(TAG_NAME, 'exitRoom');\r\n\t\t\t\tthis.pusher.reset();\r\n\t\t\t\tthis.status.isPush = false;\r\n\t\t\t\tconst result = this.userController.reset();\r\n\t\t\t\tthis.setData(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpusher: this.pusher,\r\n\t\t\t\t\t\tuserList: result.userList,\r\n\t\t\t\t\t\tstreamList: result.streamList\r\n\t\t\t\t\t},\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\t// 在销毁页面时调用，不会走到这里\r\n\t\t\t\t\t\tresolve({\r\n\t\t\t\t\t\t\tuserList: this.userList,\r\n\t\t\t\t\t\t\tstreamList: this.streamList\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, 'exitRoom success', this.pusher, this.streamList, this.userList);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 开启摄像头\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\tpublishLocalVideo: function() {\r\n\t\t\t// 设置 pusher enableCamera\r\n\t\t\tconsole.log(TAG_NAME, 'publishLocalVideo 开启摄像头');\r\n\t\t\treturn this.setPusherConfigFun({\r\n\t\t\t\tenableCamera: true\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 关闭摄像头\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\tunpublishLocalVideo: function() {\r\n\t\t\t// 设置 pusher enableCamera\r\n\t\t\tconsole.log(TAG_NAME, 'unpublshLocalVideo 关闭摄像头');\r\n\t\t\treturn this.setPusherConfigFun({\r\n\t\t\t\tenableCamera: false\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 开启麦克风\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\tpublishLocalAudio: function() {\r\n\t\t\t// 设置 pusher enableCamera\r\n\t\t\tconsole.log(TAG_NAME, 'publishLocalAudio 开启麦克风');\r\n\t\t\treturn this.setPusherConfigFun({\r\n\t\t\t\tenableMic: true\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 关闭麦克风\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\tunpublishLocalAudio: function() {\r\n\t\t\t// 设置 pusher enableCamera\r\n\t\t\tconsole.log(TAG_NAME, 'unpublshLocalAudio 关闭麦克风');\r\n\t\t\treturn this.setPusherConfigFun({\r\n\t\t\t\tenableMic: false\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 订阅远端视频 主流 小画面 辅流\r\n\t\t * @param {Object} params {userID,streamType} streamType 传入 small 时修改对应的主流url的 streamtype 参数为small\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\tsubscribeRemoteVideo(params) {\r\n\t\t\tconsole.log(TAG_NAME, 'subscribeRemoteVideo', params); // 设置指定 user streamType 的 muteVideo 为 false\r\n\r\n\t\t\tconst config = {\r\n\t\t\t\tmuteVideo: false\r\n\t\t\t}; // 本地数据结构里的 streamType 只支持 main 和 aux ，订阅small 也是对main进行处理\r\n\r\n\t\t\tconst streamType = params.streamType === 'small' ? 'main' : params.streamType;\r\n\r\n\t\t\tif (params.streamType === 'small' || params.streamType === 'main') {\r\n\t\t\t\tconst stream = this.userController.getStream({\r\n\t\t\t\t\tuserID: params.userID,\r\n\t\t\t\t\tstreamType: streamType\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (stream && stream.streamType === 'main') {\r\n\t\t\t\t\tconsole.log(TAG_NAME, 'subscribeRemoteVideo switch small', stream.src);\r\n\r\n\t\t\t\t\tif (params.streamType === 'small') {\r\n\t\t\t\t\t\tconfig.src = stream.src.replace('main', 'small');\r\n\t\t\t\t\t\tconfig._definitionType = 'small'; // 用于设置面板的渲染\r\n\t\t\t\t\t} else if (params.streamType === 'main') {\r\n\t\t\t\t\t\tstream.src = stream.src.replace('small', 'main');\r\n\t\t\t\t\t\tconfig._definitionType = 'main';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconsole.log(TAG_NAME, 'subscribeRemoteVideo', stream.src);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn this.setPlayerConfigFun({\r\n\t\t\t\tuserID: params.userID,\r\n\t\t\t\tstreamType: streamType,\r\n\t\t\t\tconfig: config\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 取消订阅远端视频\r\n\t\t * @param {Object} params {userID,streamType}\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\tunsubscribeRemoteVideo(params) {\r\n\t\t\tconsole.log(TAG_NAME, 'unsubscribeRemoteVideo', params); // 设置指定 user streamType 的 muteVideo 为 true\r\n\r\n\t\t\treturn this.setPlayerConfigFun({\r\n\t\t\t\tuserID: params.userID,\r\n\t\t\t\tstreamType: params.streamType,\r\n\t\t\t\tconfig: {\r\n\t\t\t\t\tmuteVideo: true\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 订阅远端音频\r\n\t\t * @param {Object} params userID 用户ID\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\tsubscribeRemoteAudio(params) {\r\n\t\t\tconsole.log(TAG_NAME, 'subscribeRemoteAudio', params);\r\n\t\t\treturn this.setPlayerConfigFun({\r\n\t\t\t\tuserID: params.userID,\r\n\t\t\t\tstreamType: 'main',\r\n\t\t\t\tconfig: {\r\n\t\t\t\t\tmuteAudio: false\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 取消订阅远端音频\r\n\t\t * @param {Object} params userID 用户ID\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\tunsubscribeRemoteAudio(params) {\r\n\t\t\tconsole.log(TAG_NAME, 'unsubscribeRemoteAudio', params);\r\n\t\t\treturn this.setPlayerConfigFun({\r\n\t\t\t\tuserID: params.userID,\r\n\t\t\t\tstreamType: 'main',\r\n\t\t\t\tconfig: {\r\n\t\t\t\t\tmuteAudio: true\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\ton: function(eventCode, handler, context) {\r\n\t\t\tthis._emitter.on(eventCode, handler, context);\r\n\t\t},\r\n\t\toff: function(eventCode, handler) {\r\n\t\t\tthis._emitter.off(eventCode, handler);\r\n\t\t},\r\n\t\tgetRemoteUserList: function() {\r\n\t\t\treturn this.userList;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 切换前后摄像头\r\n\t\t */\r\n\t\tswitchCamera: function() {\r\n\t\t\tif (!this.cameraPosition) {\r\n\t\t\t\t// this.data.pusher.cameraPosition 是初始值，不支持动态设置\r\n\t\t\t\tthis.cameraPosition = this.pusher.frontCamera;\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(TAG_NAME, 'switchCamera', this.cameraPosition);\r\n\t\t\tthis.cameraPosition = this.cameraPosition === 'front' ? 'back' : 'front';\r\n\t\t\tthis.setData(\r\n\t\t\t\t{\r\n\t\t\t\t\tcameraPosition: this.cameraPosition\r\n\t\t\t\t},\r\n\t\t\t\t() => {\r\n\t\t\t\t\tconsole.log(TAG_NAME, 'switchCamera success', this.cameraPosition);\r\n\t\t\t\t}\r\n\t\t\t); // wx 7.0.9 不支持动态设置 pusher.devicePosition ，需要调用api设置，这里修改cameraPosition是为了记录状态\r\n\r\n\t\t\tthis.pusher.getPusherContext().switchCamera();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 设置指定player view的渲染坐标和尺寸\r\n\t\t * @param {object} params\r\n\t\t * userID: string\r\n\t\t * streamType: string\r\n\t\t * xAxis: number\r\n\t\t * yAxis: number\r\n\t\t * width: number\r\n\t\t * height: number\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\tsetViewRect: function(params) {\r\n\t\t\tconsole.log(TAG_NAME, 'setViewRect', params);\r\n\r\n\t\t\tif (this.pusher.template !== 'custom') {\r\n\t\t\t\tconsole.warn(`如需使用setViewRect方法，请设置template:\"custom\", 当前 template:\"${this.pusher.template}\"`);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.pusher.userID === params.userID) {\r\n\t\t\t\treturn this.setPusherConfigFun({\r\n\t\t\t\t\txAxis: params.xAxis,\r\n\t\t\t\t\tyAxis: params.yAxis,\r\n\t\t\t\t\twidth: params.width,\r\n\t\t\t\t\theight: params.height\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn this.setPlayerConfigFun({\r\n\t\t\t\tuserID: params.userID,\r\n\t\t\t\tstreamType: params.streamType,\r\n\t\t\t\tconfig: {\r\n\t\t\t\t\txAxis: params.xAxis,\r\n\t\t\t\t\tyAxis: params.yAxis,\r\n\t\t\t\t\twidth: params.width,\r\n\t\t\t\t\theight: params.height\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 设置指定 player 或者 pusher view 是否可见\r\n\t\t * @param {object} params\r\n\t\t * userID: string\r\n\t\t * streamType: string\r\n\t\t * isVisible：boolean\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\tsetViewVisible: function(params) {\r\n\t\t\tconsole.log(TAG_NAME, 'setViewVisible', params); // if (this.data.pusher.template !== 'custom') {\r\n\t\t\t//   console.warn(`如需使用setViewVisible方法，请设置template:\"custom\", 当前 template:\"${this.data.pusher.template}\"`)\r\n\t\t\t// }\r\n\r\n\t\t\tif (this.pusher.userID === params.userID) {\r\n\t\t\t\treturn this.setPusherConfigFun({\r\n\t\t\t\t\tisVisible: params.isVisible\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn this.setPlayerConfigFun({\r\n\t\t\t\tuserID: params.userID,\r\n\t\t\t\tstreamType: params.streamType,\r\n\t\t\t\tconfig: {\r\n\t\t\t\t\tisVisible: params.isVisible\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 设置指定player view的层级\r\n\t\t * @param {Object} params\r\n\t\t * userID: string\r\n\t\t * streamType: string\r\n\t\t * zindex: number\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\tsetViewZIndex: function(params) {\r\n\t\t\tconsole.log(TAG_NAME, 'setViewZIndex', params);\r\n\r\n\t\t\tif (this.pusher.template !== 'custom') {\r\n\t\t\t\tconsole.warn(`如需使用setViewZIndex方法，请设置template:\"custom\", 当前 template:\"${this.pusher.template}\"`);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.pusher.userID === params.userID) {\r\n\t\t\t\treturn this.setPusherConfigFun({\r\n\t\t\t\t\tzindex: params.zindex\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn this.setPlayerConfigFun({\r\n\t\t\t\tuserID: params.userID,\r\n\t\t\t\tstreamType: params.streamType,\r\n\t\t\t\tconfig: {\r\n\t\t\t\t\tzindex: params.zindex\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 播放背景音\r\n\t\t * @param {Object} params url\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\tplayBGM: function(params) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tthis.pusher.getPusherContext().playBGM({\r\n\t\t\t\t\turl: params.url,\r\n\t\t\t\t\t// 已经有相关事件不需要在这里监听,目前用于测试\r\n\t\t\t\t\tsuccess: () => {\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, '播放背景音成功'); // this._emitter.emit(EVENT.BGM_PLAY_START)\r\n\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfail: () => {\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, '播放背景音失败');\r\n\r\n\t\t\t\t\t\tthis._emitter.emit(EVENT.BGM_PLAY_FAIL);\r\n\r\n\t\t\t\t\t\treject(new Error('播放背景音失败'));\r\n\t\t\t\t\t} // complete: () => {\r\n\t\t\t\t\t//   console.log(TAG_NAME, '背景完成')\r\n\t\t\t\t\t//   this._emitter.emit(EVENT.BGM_PLAY_COMPLETE)\r\n\t\t\t\t\t// },\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\t\tstopBGM: function() {\r\n\t\t\tthis.pusher.getPusherContext().stopBGM();\r\n\t\t},\r\n\t\tpauseBGM: function() {\r\n\t\t\tthis.pusher.getPusherContext().pauseBGM();\r\n\t\t},\r\n\t\tresumeBGM: function() {\r\n\t\t\tthis.pusher.getPusherContext().resumeBGM();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 设置背景音音量\r\n\t\t * @param {Object} params volume\r\n\t\t */\r\n\t\tsetBGMVolume: function(params) {\r\n\t\t\tthis.pusher.getPusherContext().setBGMVolume({\r\n\t\t\t\tvolume: params.volume\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 设置麦克风音量\r\n\t\t * @param {Object} params volume\r\n\t\t */\r\n\t\tsetMICVolume: function(params) {\r\n\t\t\tthis.pusher.getPusherContext().setMICVolume({\r\n\t\t\t\tvolume: params.volume\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 发送SEI消息\r\n\t\t * @param {Object} params message\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\tsendSEI: function(params) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tthis.pusher.getPusherContext().sendMessage({\r\n\t\t\t\t\tmsg: params.message,\r\n\t\t\t\t\tsuccess: function(result) {\r\n\t\t\t\t\t\tresolve(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * pusher 和 player 的截图并保存\r\n\t\t * @param {Object} params userID streamType\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\tsnapshot: function(params) {\r\n\t\t\tconsole.log(TAG_NAME, 'snapshot', params);\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tthis.captureSnapshot(params)\r\n\t\t\t\t\t.then(result => {\r\n\t\t\t\t\t\twx.saveImageToPhotosAlbum({\r\n\t\t\t\t\t\t\tfilePath: result.tempImagePath,\r\n\r\n\t\t\t\t\t\t\tsuccess(res) {\r\n\t\t\t\t\t\t\t\twx.showToast({\r\n\t\t\t\t\t\t\t\t\ttitle: '已保存到相册'\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tconsole.log('save photo is success', res);\r\n\t\t\t\t\t\t\t\tresolve(result);\r\n\t\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\t\tfail: function(error) {\r\n\t\t\t\t\t\t\t\twx.showToast({\r\n\t\t\t\t\t\t\t\t\ticon: 'none',\r\n\t\t\t\t\t\t\t\t\ttitle: '保存失败'\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tconsole.log('save photo is fail', error);\r\n\t\t\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 获取pusher 和 player 的截图\r\n\t\t * @param {Object} params userID streamType\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\tcaptureSnapshot: function(params) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tif (params.userID === this.pusher.userID) {\r\n\t\t\t\t\t// pusher\r\n\t\t\t\t\tthis.pusher.getPusherContext().snapshot({\r\n\t\t\t\t\t\tquality: 'raw',\r\n\t\t\t\t\t\tcomplete: result => {\r\n\t\t\t\t\t\t\tconsole.log(TAG_NAME, 'snapshot pusher', result);\r\n\r\n\t\t\t\t\t\t\tif (result.tempImagePath) {\r\n\t\t\t\t\t\t\t\tresolve(result);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.log('snapShot 回调失败', result);\r\n\t\t\t\t\t\t\t\treject(new Error('截图失败'));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// player\r\n\t\t\t\t\tthis.userController.getStream(params).playerContext.snapshot({\r\n\t\t\t\t\t\tquality: 'raw',\r\n\t\t\t\t\t\tcomplete: result => {\r\n\t\t\t\t\t\t\tconsole.log(TAG_NAME, 'snapshot player', result);\r\n\r\n\t\t\t\t\t\t\tif (result.tempImagePath) {\r\n\t\t\t\t\t\t\t\tresolve(result);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.log('snapShot 回调失败', result);\r\n\t\t\t\t\t\t\t\treject(new Error('截图失败'));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 将远端视频全屏\r\n\t\t * @param {Object} params userID streamType direction\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\tenterFullscreen: function(params) {\r\n\t\t\tconsole.log(TAG_NAME, 'enterFullscreen', params);\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tthis.userController.getStream(params).playerContext.requestFullScreen({\r\n\t\t\t\t\tdirection: params.direction || 0,\r\n\t\t\t\t\tsuccess: event => {\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, 'enterFullscreen success', event);\r\n\t\t\t\t\t\tresolve(event);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfail: event => {\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, 'enterFullscreen fail', event);\r\n\t\t\t\t\t\treject(event);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 将远端视频取消全屏\r\n\t\t * @param {Object} params userID streamType\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\texitFullscreen: function(params) {\r\n\t\t\tconsole.log(TAG_NAME, 'exitFullscreen', params);\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tthis.userController.getStream(params).playerContext.exitFullScreen({\r\n\t\t\t\t\tsuccess: event => {\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, 'exitFullScreen success', event);\r\n\t\t\t\t\t\tresolve(event);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfail: event => {\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, 'exitFullScreen fail', event);\r\n\t\t\t\t\t\treject(event);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 设置 player 视图的横竖屏显示\r\n\t\t * @param {Object} params userID streamType orientation: vertical, horizontal\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\tsetRemoteOrientation: function(params) {\r\n\t\t\treturn this.setPlayerConfigFun({\r\n\t\t\t\tuserID: params.userID,\r\n\t\t\t\tstreamType: params.streamType,\r\n\t\t\t\tconfig: {\r\n\t\t\t\t\torientation: params.orientation\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t// 改为：\r\n\t\tsetViewOrientation: function(params) {\r\n\t\t\treturn this.setPlayerConfigFun({\r\n\t\t\t\tuserID: params.userID,\r\n\t\t\t\tstreamType: params.streamType,\r\n\t\t\t\tconfig: {\r\n\t\t\t\t\torientation: params.orientation\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 设置 player 视图的填充模式\r\n\t\t * @param {Object} params userID streamType fillMode: contain，fillCrop\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\tsetRemoteFillMode: function(params) {\r\n\t\t\treturn this.setPlayerConfigFun({\r\n\t\t\t\tuserID: params.userID,\r\n\t\t\t\tstreamType: params.streamType,\r\n\t\t\t\tconfig: {\r\n\t\t\t\t\tobjectFit: params.fillMode\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t// 改为：\r\n\t\tsetViewFillMode: function(params) {\r\n\t\t\treturn this.setPlayerConfigFun({\r\n\t\t\t\tuserID: params.userID,\r\n\t\t\t\tstreamType: params.streamType,\r\n\t\t\t\tconfig: {\r\n\t\t\t\t\tobjectFit: params.fillMode\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 切换 player 大小画面\r\n\t\t * @param {Object} params userID streamType definition: HD SD\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\tsetRemoteDefinitionFun: function(params) {\r\n\t\t\tparams.streamType = 'main';\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tconst stream = this.userController.getStream({\r\n\t\t\t\t\tuserID: params.userID,\r\n\t\t\t\t\tstreamType: params.streamType\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (stream && stream.streamType === 'main') {\r\n\t\t\t\t\tconsole.log(TAG_NAME, '_switchStreamType', stream.src); // stream.volume = volume\r\n\r\n\t\t\t\t\tif (stream.src.indexOf('main') > -1) {\r\n\t\t\t\t\t\tstream.src = stream.src.replace('main', 'small');\r\n\t\t\t\t\t\tstream._streamType = 'small'; // 用于设置面板的渲染\r\n\t\t\t\t\t} else if (stream.src.indexOf('small') > -1) {\r\n\t\t\t\t\t\tstream.src = stream.src.replace('small', 'main');\r\n\t\t\t\t\t\tstream._streamType = 'main';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconsole.log(TAG_NAME, '_switchStreamType', stream.src);\r\n\t\t\t\t\tthis.setData(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tstreamList: this.streamList\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t() => {}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tinitStatusFun() {\r\n\t\t\tthis.status = {\r\n\t\t\t\tisPush: false,\r\n\t\t\t\t// 推流状态\r\n\t\t\t\tisPending: false // 挂起状态，触发5000事件标记为true，onShow后标记为false\r\n\t\t\t};\r\n\t\t\tthis._lastTapTime = 0;\r\n\t\t\tthis._beforeLastTapTime = 0;\r\n\t\t\tthis._isFullscreen = false;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 设置推流参数并触发页面渲染更新\r\n\t\t * @param {Object} config live-pusher 的配置\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\tsetPusherConfigFun(config) {\r\n\t\t\tconsole.log(TAG_NAME, '_setPusherConfig', config, this.pusher);\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tif (!this.pusher) {\r\n\t\t\t\t\tthis.pusher = new Pusher(config);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tObject.assign(this.pusher, config);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setData(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpusher: this.pusher\r\n\t\t\t\t\t},\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\t// console.log(TAG_NAME, '_setPusherConfig setData compelete', 'config:', config, 'pusher:', this.data.pusher)\r\n\t\t\t\t\t\tresolve(config);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t * @param {Object} params include userID,streamType,config\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\tsetPlayerConfigFun(params) {\r\n\t\t\tconst userID = params.userID;\r\n\t\t\tconst streamType = params.streamType;\r\n\t\t\tconst config = params.config;\r\n\t\t\tconsole.log(TAG_NAME, '_setPlayerConfig', params);\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t// 获取指定的userID streamType 的 stream\r\n\t\t\t\tconst user = this.userController.getUser(userID);\r\n\r\n\t\t\t\tif (user && user.streams[streamType]) {\r\n\t\t\t\t\tuser.streams[streamType] = Object.assign(user.streams[streamType], config); // user.streams引用的对象和 streamList 里的是同一个\r\n\r\n\t\t\t\t\tthis.setData(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tstreamList: this.streamList\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t() => {\r\n\t\t\t\t\t\t\t// console.log(TAG_NAME, '_setPlayerConfig complete', params, 'streamList:', this.data.streamList)\r\n\t\t\t\t\t\t\tresolve(params);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 不需要reject，静默处理\r\n\t\t\t\t\tconsole.warn(TAG_NAME, '指定 userID 或者 streamType 不存在'); // reject(new Error('指定 userID 或者 streamType 不存在'))\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 必选参数检测\r\n\t\t * @param {Object} rtcConfig rtc参数\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tcheckParamFun: function(rtcConfig) {\r\n\t\t\tconsole.log(TAG_NAME, 'checkParam config:', rtcConfig);\r\n\r\n\t\t\tif (!rtcConfig.sdkAppID) {\r\n\t\t\t\tconsole.error('未设置 sdkAppID');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (rtcConfig.roomID === undefined) {\r\n\t\t\t\tconsole.error('未设置 roomID');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (rtcConfig.roomID < 1 || rtcConfig.roomID > 4294967296) {\r\n\t\t\t\tconsole.error('roomID 超出取值范围 1 ~ 4294967295');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (!rtcConfig.userID) {\r\n\t\t\t\tconsole.error('未设置 userID');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (!rtcConfig.userSig) {\r\n\t\t\t\tconsole.error('未设置 userSig');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (!rtcConfig.template) {\r\n\t\t\t\tconsole.error('未设置 template');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\tgetPushUrlFun: function(rtcConfig) {\r\n\t\t\t// 拼接 puhser url rtmp 方案\r\n\t\t\tconsole.log(TAG_NAME, 'getPushUrl', rtcConfig);\r\n\r\n\t\t\tif (ENV.IS_TRTC) {\r\n\t\t\t\t// 版本高于7.0.8，基础库版本高于2.10.0 使用新的 url\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\t// appscene videocall live\r\n\t\t\t\t\t// cloudenv PRO CCC DEV UAT\r\n\t\t\t\t\t// encsmall 0\r\n\t\t\t\t\t// 对外的默认值是rtc ，对内的默认值是videocall\r\n\t\t\t\t\trtcConfig.scene = !rtcConfig.scene || rtcConfig.scene === 'rtc' ? 'videocall' : 'live';\r\n\t\t\t\t\trtcConfig.enableBlackStream = rtcConfig.enableBlackStream || 1;\r\n\t\t\t\t\trtcConfig.encsmall = rtcConfig.encsmall || 0;\r\n\t\t\t\t\trtcConfig.cloudenv = rtcConfig.cloudenv || 'PRO';\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tconst pushUrl =\r\n\t\t\t\t\t\t\t'room://cloud.tencent.com/rtc?sdkappid=' +\r\n\t\t\t\t\t\t\trtcConfig.sdkAppID +\r\n\t\t\t\t\t\t\t'&roomid=' +\r\n\t\t\t\t\t\t\trtcConfig.roomID +\r\n\t\t\t\t\t\t\t'&userid=' +\r\n\t\t\t\t\t\t\trtcConfig.userID +\r\n\t\t\t\t\t\t\t'&usersig=' +\r\n\t\t\t\t\t\t\trtcConfig.userSig +\r\n\t\t\t\t\t\t\t'&appscene=' +\r\n\t\t\t\t\t\t\trtcConfig.scene +\r\n\t\t\t\t\t\t\t'&encsmall=' +\r\n\t\t\t\t\t\t\trtcConfig.encsmall +\r\n\t\t\t\t\t\t\t'&cloudenv=' +\r\n\t\t\t\t\t\t\trtcConfig.cloudenv;\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, 'getPushUrl result:', pushUrl);\r\n\t\t\t\t\t\tresolve(pushUrl);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn this.requestSigServerFun(rtcConfig);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 获取签名和推流地址\r\n\t\t * @param {Object} rtcConfig 进房参数配置\r\n\t\t * @returns {Promise}\r\n\t\t */\r\n\t\trequestSigServerFun: function(rtcConfig) {\r\n\t\t\tconsole.log('requestSigServer:', rtcConfig);\r\n\t\t\tconst sdkAppID = rtcConfig.sdkAppID;\r\n\t\t\tconst userID = rtcConfig.userID;\r\n\t\t\tconst userSig = rtcConfig.userSig;\r\n\t\t\tconst roomID = rtcConfig.roomID;\r\n\t\t\tconst privateMapKey = rtcConfig.privateMapKey;\r\n\t\t\trtcConfig.useCloud = rtcConfig.useCloud === undefined ? true : rtcConfig.useCloud;\r\n\t\t\tlet url = rtcConfig.useCloud ? 'https://official.opensso.tencent-cloud.com/v4/openim/jsonvideoapp' : 'https://yun.tim.qq.com/v4/openim/jsonvideoapp';\r\n\t\t\turl += '?sdkappid=' + sdkAppID + '&identifier=' + userID + '&usersig=' + userSig + '&random=' + Date.now() + '&contenttype=json';\r\n\t\t\tconst reqHead = {\r\n\t\t\t\tCmd: 1,\r\n\t\t\t\tSeqNo: 1,\r\n\t\t\t\tBusType: 7,\r\n\t\t\t\tGroupId: roomID\r\n\t\t\t};\r\n\t\t\tconst reqBody = {\r\n\t\t\t\tPrivMapEncrypt: privateMapKey,\r\n\t\t\t\tTerminalType: 1,\r\n\t\t\t\tFromType: 3,\r\n\t\t\t\tSdkVersion: 26280566\r\n\t\t\t};\r\n\t\t\tconsole.log('requestSigServer:', url, reqHead, reqBody);\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\twx.request({\r\n\t\t\t\t\turl: url,\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tReqHead: reqHead,\r\n\t\t\t\t\t\tReqBody: reqBody\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\tsuccess: res => {\r\n\t\t\t\t\t\tconsole.log('requestSigServer success:', res);\r\n\r\n\t\t\t\t\t\tif (res.data['ErrorCode'] || res.data['RspHead']['ErrorCode'] !== 0) {\r\n\t\t\t\t\t\t\t// console.error(res.data['ErrorInfo'] || res.data['RspHead']['ErrorInfo'])\r\n\t\t\t\t\t\t\tconsole.error('获取roomsig失败');\r\n\t\t\t\t\t\t\treject(res);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst roomSig = JSON.stringify(res.data['RspBody']);\r\n\t\t\t\t\t\tlet pushUrl = 'room://cloud.tencent.com?sdkappid=' + sdkAppID + '&roomid=' + roomID + '&userid=' + userID + '&roomsig=' + encodeURIComponent(roomSig); // TODO 需要重新整理的逻辑\r\n\t\t\t\t\t\t// 如果有配置纯音频推流或者recordId参数\r\n\r\n\t\t\t\t\t\tif (rtcConfig.pureAudioPushMod || rtcConfig.recordId) {\r\n\t\t\t\t\t\t\tconst bizbuf = {\r\n\t\t\t\t\t\t\t\tStr_uc_params: {\r\n\t\t\t\t\t\t\t\t\tpure_audio_push_mod: 0,\r\n\t\t\t\t\t\t\t\t\trecord_id: 0\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}; // 纯音频推流\r\n\r\n\t\t\t\t\t\t\tif (rtcConfig.pureAudioPushMod) {\r\n\t\t\t\t\t\t\t\tbizbuf.Str_uc_params.pure_audio_push_mod = rtcConfig.pureAudioPushMod;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tdelete bizbuf.Str_uc_params.pure_audio_push_mod;\r\n\t\t\t\t\t\t\t} // 自动录制时业务自定义id\r\n\r\n\t\t\t\t\t\t\tif (rtcConfig.recordId) {\r\n\t\t\t\t\t\t\t\tbizbuf.Str_uc_params.record_id = rtcConfig.recordId;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tdelete bizbuf.Str_uc_params.record_id;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tpushUrl += '&bizbuf=' + encodeURIComponent(JSON.stringify(bizbuf));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconsole.log('roomSigInfo', pushUrl);\r\n\t\t\t\t\t\tresolve(pushUrl);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfail: res => {\r\n\t\t\t\t\t\tconsole.log('requestSigServer fail:', res);\r\n\t\t\t\t\t\treject(res);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\t\tdoubleTabToggleFullscreenFun: function(event) {\r\n\t\t\tconst curTime = event.timeStamp;\r\n\t\t\tconst lastTime = this._lastTapTime; // 已知问题：上次全屏操作后，必须等待1.5s后才能再次进行全屏操作，否则引发SDK全屏异常，因此增加节流逻辑\r\n\r\n\t\t\tconst beforeLastTime = this._beforeLastTapTime;\r\n\t\t\tconsole.log(TAG_NAME, 'doubleTabToggleFullscreenFun', event, lastTime, beforeLastTime);\r\n\r\n\t\t\tif (curTime - lastTime > 0 && curTime - lastTime < 300 && lastTime - beforeLastTime > 1500) {\r\n\t\t\t\tconst userID = event.currentTarget.dataset.userid;\r\n\t\t\t\tconst streamType = event.currentTarget.dataset.streamtype;\r\n\r\n\t\t\t\tif (this._isFullscreen) {\r\n\t\t\t\t\tthis.exitFullscreen({\r\n\t\t\t\t\t\tuserID,\r\n\t\t\t\t\t\tstreamType\r\n\t\t\t\t\t})\r\n\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\tthis._isFullscreen = false;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(() => {});\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// const stream = this.userController.getStream({ userID, streamType })\r\n\t\t\t\t\tlet direction; // // 已知问题：视频的尺寸需要等待player触发NetStatus事件才能获取到，如果进房就双击全屏，全屏后的方向有可能不对。\r\n\t\t\t\t\t// if (stream && stream.videoWidth && stream.videoHeight) {\r\n\t\t\t\t\t//   // 如果是横视频，全屏时进行横屏处理。如果是竖视频，则为0\r\n\t\t\t\t\t//   direction = stream.videoWidth > stream.videoHeight ? 90 : 0\r\n\t\t\t\t\t// }\r\n\r\n\t\t\t\t\tthis.enterFullscreen({\r\n\t\t\t\t\t\tuserID,\r\n\t\t\t\t\t\tstreamType,\r\n\t\t\t\t\t\tdirection\r\n\t\t\t\t\t})\r\n\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\tthis._isFullscreen = true;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(() => {});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._beforeLastTapTime = lastTime;\r\n\t\t\t}\r\n\r\n\t\t\tthis._lastTapTime = curTime;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * TRTC-room 远端用户和音视频状态处理\r\n\t\t */\r\n\t\tbindEventFun: function() {\r\n\t\t\t// 远端用户进房\r\n\t\t\tthis.userController.on(EVENT.REMOTE_USER_JOIN, event => {\r\n\t\t\t\tconsole.log(TAG_NAME, '远端用户进房', event, event.data.userID);\r\n\t\t\t\tthis.setData(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tuserList: event.data.userList\r\n\t\t\t\t\t},\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tthis._emitter.emit(EVENT.REMOTE_USER_JOIN, {\r\n\t\t\t\t\t\t\tuserID: event.data.userID\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tconsole.log(TAG_NAME, 'REMOTE_USER_JOIN', 'streamList:', this.streamList, 'userList:', this.userList);\r\n\t\t\t}); // 远端用户离开\r\n\r\n\t\t\tthis.userController.on(EVENT.REMOTE_USER_LEAVE, event => {\r\n\t\t\t\tconsole.log(TAG_NAME, '远端用户离开', event, event.data.userID);\r\n\r\n\t\t\t\tif (event.data.userID) {\r\n\t\t\t\t\tthis.setData(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tuserList: event.data.userList,\r\n\t\t\t\t\t\t\tstreamList: event.data.streamList\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t() => {\r\n\t\t\t\t\t\t\tthis._emitter.emit(EVENT.REMOTE_USER_LEAVE, {\r\n\t\t\t\t\t\t\t\tuserID: event.data.userID\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(TAG_NAME, 'REMOTE_USER_LEAVE', 'streamList:', this.streamList, 'userList:', this.userList);\r\n\t\t\t}); // 视频状态 true\r\n\r\n\t\t\tthis.userController.on(EVENT.REMOTE_VIDEO_ADD, event => {\r\n\t\t\t\tconsole.log(TAG_NAME, '远端视频可用', event, event.data.stream.userID);\r\n\t\t\t\tconst stream = event.data.stream;\r\n\t\t\t\tthis.setData(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tuserList: event.data.userList,\r\n\t\t\t\t\t\tstreamList: event.data.streamList\r\n\t\t\t\t\t},\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\t// 完善 的stream 的 playerContext\r\n\t\t\t\t\t\tstream.playerContext = wx.createLivePlayerContext(stream.streamID, this); // 新增的需要触发一次play 默认属性才能生效\r\n\t\t\t\t\t\t// stream.playerContext.play()\r\n\t\t\t\t\t\t// console.log(TAG_NAME, 'REMOTE_VIDEO_ADD playerContext.play()', stream)\r\n\t\t\t\t\t\t// TODO 视频通话模版默认订阅且显示\r\n\r\n\t\t\t\t\t\tthis._emitter.emit(EVENT.REMOTE_VIDEO_ADD, {\r\n\t\t\t\t\t\t\tuserID: stream.userID,\r\n\t\t\t\t\t\t\tstreamType: stream.streamType\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tconsole.log(TAG_NAME, 'REMOTE_VIDEO_ADD', 'streamList:', this.streamList, 'userList:', this.userList);\r\n\t\t\t}); // 视频状态 false\r\n\r\n\t\t\tthis.userController.on(EVENT.REMOTE_VIDEO_REMOVE, event => {\r\n\t\t\t\tconsole.log(TAG_NAME, '远端视频移除', event, event.data.stream.userID);\r\n\t\t\t\tconst stream = event.data.stream;\r\n\t\t\t\tthis.setData(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tuserList: event.data.userList,\r\n\t\t\t\t\t\tstreamList: event.data.streamList\r\n\t\t\t\t\t},\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\t// 有可能先触发了退房事件，用户名下的所有stream都已清除\r\n\t\t\t\t\t\tif (stream.userID && stream.streamType) {\r\n\t\t\t\t\t\t\tthis._emitter.emit(EVENT.REMOTE_VIDEO_REMOVE, {\r\n\t\t\t\t\t\t\t\tuserID: stream.userID,\r\n\t\t\t\t\t\t\t\tstreamType: stream.streamType\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tconsole.log(TAG_NAME, 'REMOTE_VIDEO_REMOVE', 'streamList:', this.streamList, 'userList:', this.userList);\r\n\t\t\t}); // 音频可用\r\n\r\n\t\t\tthis.userController.on(EVENT.REMOTE_AUDIO_ADD, event => {\r\n\t\t\t\tconsole.log(TAG_NAME, '远端音频可用', event);\r\n\t\t\t\tconst stream = event.data.stream;\r\n\t\t\t\tthis.setData(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tuserList: event.data.userList,\r\n\t\t\t\t\t\tstreamList: event.data.streamList\r\n\t\t\t\t\t},\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tstream.playerContext = wx.createLivePlayerContext(stream.streamID, this); // 新增的需要触发一次play 默认属性才能生效\r\n\t\t\t\t\t\t// stream.playerContext.play()\r\n\t\t\t\t\t\t// console.log(TAG_NAME, 'REMOTE_AUDIO_ADD playerContext.play()', stream)\r\n\r\n\t\t\t\t\t\tthis._emitter.emit(EVENT.REMOTE_AUDIO_ADD, {\r\n\t\t\t\t\t\t\tuserID: stream.userID,\r\n\t\t\t\t\t\t\tstreamType: stream.streamType\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tconsole.log(TAG_NAME, 'REMOTE_AUDIO_ADD', 'streamList:', this.streamList, 'userList:', this.userList);\r\n\t\t\t}); // 音频不可用\r\n\r\n\t\t\tthis.userController.on(EVENT.REMOTE_AUDIO_REMOVE, event => {\r\n\t\t\t\tconsole.log(TAG_NAME, '远端音频移除', event, event.data.stream.userID);\r\n\t\t\t\tconst stream = event.data.stream;\r\n\t\t\t\tthis.setData(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tuserList: event.data.userList,\r\n\t\t\t\t\t\tstreamList: event.data.streamList\r\n\t\t\t\t\t},\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\t// 有可能先触发了退房事件，用户名下的所有stream都已清除\r\n\t\t\t\t\t\tif (stream.userID && stream.streamType) {\r\n\t\t\t\t\t\t\tthis._emitter.emit(EVENT.REMOTE_AUDIO_REMOVE, {\r\n\t\t\t\t\t\t\t\tuserID: stream.userID,\r\n\t\t\t\t\t\t\t\tstreamType: stream.streamType\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tconsole.log(TAG_NAME, 'REMOTE_AUDIO_REMOVE', 'streamList:', this.streamList, 'userList:', this.userList);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * pusher event handler\r\n\t\t * @param {*} event 事件实例\r\n\t\t */\r\n\t\tpusherStateChangeHandlerFun: function(event) {\r\n\t\t\tconst code = event.detail.code;\r\n\t\t\tconst message = event.detail.message;\r\n\t\t\tconsole.log(TAG_NAME, 'pusherStateChange：', code, event);\r\n\r\n\t\t\tswitch (code) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tconsole.log(message, code);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1001:\r\n\t\t\t\t\tconsole.log('已经连接推流服务器', code);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1002:\r\n\t\t\t\t\tconsole.log('已经与服务器握手完毕,开始推流', code);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1003:\r\n\t\t\t\t\tconsole.log('打开摄像头成功', code);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1004:\r\n\t\t\t\t\tconsole.log('录屏启动成功', code);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1005:\r\n\t\t\t\t\tconsole.log('推流动态调整分辨率', code);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1006:\r\n\t\t\t\t\tconsole.log('推流动态调整码率', code);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1007:\r\n\t\t\t\t\tconsole.log('首帧画面采集完成', code);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1008:\r\n\t\t\t\t\tconsole.log('编码器启动', code);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1018:\r\n\t\t\t\t\tconsole.log('进房成功', code);\r\n\r\n\t\t\t\t\tthis._emitter.emit(EVENT.LOCAL_JOIN, {\r\n\t\t\t\t\t\tuserID: this.pusher.userID\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1019:\r\n\t\t\t\t\tconsole.log('退出房间', code);\r\n\r\n\t\t\t\t\tthis._emitter.emit(EVENT.LOCAL_LEAVE, {\r\n\t\t\t\t\t\tuserID: this.pusher.userID\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2003:\r\n\t\t\t\t\tconsole.log('渲染首帧视频', code);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1020:\r\n\t\t\t\tcase 1031:\r\n\t\t\t\tcase 1032:\r\n\t\t\t\tcase 1033:\r\n\t\t\t\tcase 1034:\r\n\t\t\t\t\t// 通过 userController 处理 1020 1031 1032 1033 1034\r\n\t\t\t\t\tthis.userController.userEventHandler(event);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase -1301:\r\n\t\t\t\t\tconsole.error('打开摄像头失败: ', code);\r\n\r\n\t\t\t\t\tthis._emitter.emit(EVENT.ERROR, {\r\n\t\t\t\t\t\tcode,\r\n\t\t\t\t\t\tmessage\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase -1302:\r\n\t\t\t\t\tconsole.error('打开麦克风失败: ', code);\r\n\r\n\t\t\t\t\tthis._emitter.emit(EVENT.ERROR, {\r\n\t\t\t\t\t\tcode,\r\n\t\t\t\t\t\tmessage\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase -1303:\r\n\t\t\t\t\tconsole.error('视频编码失败: ', code);\r\n\r\n\t\t\t\t\tthis._emitter.emit(EVENT.ERROR, {\r\n\t\t\t\t\t\tcode,\r\n\t\t\t\t\t\tmessage\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase -1304:\r\n\t\t\t\t\tconsole.error('音频编码失败: ', code);\r\n\r\n\t\t\t\t\tthis._emitter.emit(EVENT.ERROR, {\r\n\t\t\t\t\t\tcode,\r\n\t\t\t\t\t\tmessage\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase -1307:\r\n\t\t\t\t\tconsole.error('推流连接断开: ', code);\r\n\r\n\t\t\t\t\tthis._emitter.emit(EVENT.ERROR, {\r\n\t\t\t\t\t\tcode,\r\n\t\t\t\t\t\tmessage\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase -100018:\r\n\t\t\t\t\tconsole.error('进房失败: ', code, message);\r\n\r\n\t\t\t\t\tthis._emitter.emit(EVENT.ERROR, {\r\n\t\t\t\t\t\tcode,\r\n\t\t\t\t\t\tmessage\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 5000:\r\n\t\t\t\t\tconsole.log('小程序被挂起: ', code); // 终端 sdk 建议执行退房操作，唤起时重新进房，临时解决方案，待小程序SDK完全实现自动重新推流后可以去掉\r\n\r\n\t\t\t\t\tthis.status.isPending = true;\r\n\r\n\t\t\t\t\tif (this.status.isPush) {\r\n\t\t\t\t\t\t// this.exitRoom()\r\n\t\t\t\t\t\tconst tempUrl = this.pusher.url;\r\n\t\t\t\t\t\tthis.pusher.url = ''; // console.log('5000 小程序被挂起后更换pusher', this.data.pusher.getPusherContext().webviewId)\r\n\r\n\t\t\t\t\t\tthis.setData(\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tpusher: this.pusher\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t() => {\r\n\t\t\t\t\t\t\t\tthis.pusher.url = tempUrl;\r\n\t\t\t\t\t\t\t\tthis.setData(\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tpusher: this.pusher\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t() => {\r\n\t\t\t\t\t\t\t\t\t\tthis.pusher.getPusherContext().start();\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('5000 小程序被挂起后更换pusher', this.pusher);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1021:\r\n\t\t\t\t\tconsole.log('网络类型发生变化，需要重新进房', code);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2007:\r\n\t\t\t\t\tconsole.log('本地视频播放loading: ', code);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2004:\r\n\t\t\t\t\tconsole.log('本地视频播放开始: ', code);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log(message, code);\r\n\t\t\t}\r\n\r\n\t\t\tthis._emitter.emit(EVENT.LOCAL_STATE_UPDATE, {\r\n\t\t\t\tdata: event\r\n\t\t\t});\r\n\t\t},\r\n\t\tpusherNetStatusHandlerFun: function(event) {\r\n\t\t\t// 触发 LOCAL_NET_STATE_UPDATE\r\n\t\t\tthis._emitter.emit(EVENT.LOCAL_NET_STATE_UPDATE, event);\r\n\t\t},\r\n\t\tpusherErrorHandlerFun: function(event) {\r\n\t\t\t// 触发 ERROR\r\n\t\t\tconsole.warn(TAG_NAME, 'pusher error', event);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst code = event.detail.errCode;\r\n\t\t\t\tconst message = event.detail.errMsg;\r\n\r\n\t\t\t\tthis._emitter.emit(EVENT.ERROR, {\r\n\t\t\t\t\tcode,\r\n\t\t\t\t\tmessage\r\n\t\t\t\t});\r\n\t\t\t} catch (exception) {\r\n\t\t\t\tconsole.error(TAG_NAME, 'pusher error data parser exception', event, exception);\r\n\t\t\t}\r\n\t\t},\r\n\t\tpusherBGMStartHandlerFun: function(event) {\r\n\t\t\t// 触发 BGM_START 已经在playBGM方法中进行处理\r\n\t\t\t// this._emitter.emit(EVENT.BGM_PLAY_START, { data: event })\r\n\t\t},\r\n\t\tpusherBGMProgressHandlerFun: function(event) {\r\n\t\t\t// BGM_PROGRESS\r\n\t\t\tthis._emitter.emit(EVENT.BGM_PLAY_PROGRESS, event);\r\n\t\t},\r\n\t\tpusherBGMCompleteHandlerFun: function(event) {\r\n\t\t\t// BGM_COMPLETE\r\n\t\t\tthis._emitter.emit(EVENT.BGM_PLAY_COMPLETE, event);\r\n\t\t},\r\n\t\t// player event handler\r\n\t\t// 获取 player ID 再进行触发\r\n\t\tplayerStateChangeFun: function(event) {\r\n\t\t\t// console.log(TAG_NAME, 'playerStateChangeFun', event)\r\n\t\t\tthis._emitter.emit(EVENT.REMOTE_STATE_UPDATE, event);\r\n\t\t},\r\n\t\tplayerFullscreenChangeFun: function(event) {\r\n\t\t\t// console.log(TAG_NAME, '_playerFullscreenChange', event)\r\n\t\t\tthis._emitter.emit(EVENT.REMOTE_NET_STATE_UPDATE, event);\r\n\t\t},\r\n\t\tplayerNetStatusFun: function(event) {\r\n\t\t\t// console.log(TAG_NAME, 'playerNetStatusFun', event)\r\n\t\t\t// 获取player 视频的宽高\r\n\t\t\tconst stream = this.userController.getStream({\r\n\t\t\t\tuserID: event.currentTarget.dataset.userid,\r\n\t\t\t\tstreamType: event.currentTarget.dataset.streamtype\r\n\t\t\t});\r\n\r\n\t\t\tif (stream && (stream.videoWidth !== event.detail.info.videoWidth || stream.videoHeight !== event.detail.info.videoHeight)) {\r\n\t\t\t\tconsole.log(TAG_NAME, 'playerNetStatusFun update video size', event);\r\n\t\t\t\tstream.videoWidth = event.detail.info.videoWidth;\r\n\t\t\t\tstream.videoHeight = event.detail.info.videoHeight;\r\n\t\t\t}\r\n\r\n\t\t\tthis._emitter.emit(EVENT.REMOTE_FULLSCREEN_UPDATE, event);\r\n\t\t},\r\n\t\tplayerAudioVolumeNotifyFun: function(event) {\r\n\t\t\t// console.log(TAG_NAME, 'playerAudioVolumeNotifyFun', event)\r\n\t\t\tthis._emitter.emit(EVENT.REMOTE_AUDIO_VOLUME_UPDATE, event);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 监听组件属性变更，外部变更组件属性时触发该监听，用于检查属性设置是否正常\r\n\t\t * @param {Object} data 变更数据\r\n\t\t */\r\n\t\tpropertyObserverFun: function(data) {\r\n\t\t\tconsole.log(TAG_NAME, '_propertyObserver', data, this.config);\r\n\r\n\t\t\tif (data.name === 'config') {\r\n\t\t\t\t// const config = Object.assign(DEFAULT_PUSHER_CONFIG, data.newVal)\r\n\t\t\t\tconst config = data.newVal; // querystring 只支持String类型，做一个类型防御\r\n\r\n\t\t\t\tif (typeof config.debugMode === 'string') {\r\n\t\t\t\t\tconfig.debugMode === 'true' ? true : false;\r\n\t\t\t\t} // 独立设置与pusher无关的配置\r\n\r\n\t\t\t\tthis.setData({\r\n\t\t\t\t\ttemplate: config.template,\r\n\t\t\t\t\tdebugMode: config.debugMode || false,\r\n\t\t\t\t\tdebug: config.debugMode || false\r\n\t\t\t\t});\r\n\t\t\t\tthis.setPusherConfigFun(config);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttoggleVideoFun() {\r\n\t\t\tif (this.pusher.enableCamera) {\r\n\t\t\t\tthis.unpublishLocalVideo();\r\n\t\t\t} else {\r\n\t\t\t\tthis.publishLocalVideo();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttoggleAudioFun() {\r\n\t\t\tif (this.pusher.enableMic) {\r\n\t\t\t\tthis.unpublishLocalAudio();\r\n\t\t\t} else {\r\n\t\t\t\tthis.publishLocalAudio();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdebugToggleRemoteVideoFun(event) {\r\n\t\t\tconsole.log(TAG_NAME, '_debugToggleRemoteVideo', event.currentTarget.dataset);\r\n\t\t\tconst userID = event.currentTarget.dataset.userID;\r\n\t\t\tconst streamType = event.currentTarget.dataset.streamType;\r\n\t\t\tconst stream = this.streamList.find(item => {\r\n\t\t\t\treturn item.userID === userID && item.streamType === streamType;\r\n\t\t\t});\r\n\r\n\t\t\tif (stream.muteVideo) {\r\n\t\t\t\tthis.subscribeRemoteVideo({\r\n\t\t\t\t\tuserID,\r\n\t\t\t\t\tstreamType\r\n\t\t\t\t});\r\n\t\t\t\tthis.setViewVisible({\r\n\t\t\t\t\tuserID,\r\n\t\t\t\t\tstreamType,\r\n\t\t\t\t\tisVisible: true\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.unsubscribeRemoteVideo({\r\n\t\t\t\t\tuserID,\r\n\t\t\t\t\tstreamType\r\n\t\t\t\t});\r\n\t\t\t\tthis.setViewVisible({\r\n\t\t\t\t\tuserID,\r\n\t\t\t\t\tstreamType,\r\n\t\t\t\t\tisVisible: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdebugToggleRemoteAudioFun(event) {\r\n\t\t\tconsole.log(TAG_NAME, '_debugToggleRemoteAudio', event.currentTarget.dataset);\r\n\t\t\tconst userID = event.currentTarget.dataset.userID;\r\n\t\t\tconst streamType = event.currentTarget.dataset.streamType;\r\n\t\t\tconst stream = this.streamList.find(item => {\r\n\t\t\t\treturn item.userID === userID && item.streamType === streamType;\r\n\t\t\t});\r\n\r\n\t\t\tif (stream.muteAudio) {\r\n\t\t\t\tthis.subscribeRemoteAudio({\r\n\t\t\t\t\tuserID\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.unsubscribeRemoteAudio({\r\n\t\t\t\t\tuserID\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdebugToggleVideoDebugFun() {\r\n\t\t\tthis.setData({\r\n\t\t\t\tdebug: !this.debug\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tdebugExitRoomFun() {\r\n\t\t\tthis.exitRoom();\r\n\t\t},\r\n\r\n\t\tdebugEnterRoomFun() {\r\n\t\t\tthis.publishLocalVideo();\r\n\t\t\tthis.publishLocalAudio();\r\n\t\t\tthis.enterRoom({\r\n\t\t\t\troomID: this.config.roomID\r\n\t\t\t}).then(() => {\r\n\t\t\t\t// 进房后开始推送视频或音频\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tdebugGoBackFun() {\r\n\t\t\twx.navigateBack({\r\n\t\t\t\tdelta: 1\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tdebugTogglePanelFun() {\r\n\t\t\tthis.setData({\r\n\t\t\t\tdebugPanel: !this.debugPanel\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\ttoggleAudioVolumeTypeFun() {\r\n\t\t\tif (this.pusher.audioVolumeType === 'voicecall') {\r\n\t\t\t\tthis.setPusherConfigFun({\r\n\t\t\t\t\taudioVolumeType: 'media'\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setPusherConfigFun({\r\n\t\t\t\t\taudioVolumeType: 'voicecall'\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttoggleSoundModeFun() {\r\n\t\t\tif (this.userList.length === 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst stream = this.userController.getStream({\r\n\t\t\t\tuserID: this.userList[0].userID,\r\n\t\t\t\tstreamType: 'main'\r\n\t\t\t});\r\n\r\n\t\t\tif (stream) {\r\n\t\t\t\tif (stream.soundMode === 'speaker') {\r\n\t\t\t\t\tstream['soundMode'] = 'ear';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstream['soundMode'] = 'speaker';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setPlayerConfigFun({\r\n\t\t\t\t\tuserID: stream.userID,\r\n\t\t\t\t\tstreamType: 'main',\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\tsoundMode: stream['soundMode']\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 退出通话\r\n\t\t */\r\n\t\thangUpFun: function() {\r\n\t\t\tthis.exitRoom();\r\n\t\t\twx.navigateBack({\r\n\t\t\t\tdelta: 1\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 切换订阅音频状态\r\n\t\t */\r\n\t\thandleSubscribeAudio: function() {\r\n\t\t\tif (this.pusher.enableMic) {\r\n\t\t\t\tthis.unpublishLocalAudio();\r\n\t\t\t} else {\r\n\t\t\t\tthis.publishLocalAudio();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 切换订阅远端视频状态\r\n\t\t * @param event\r\n\t\t */\r\n\t\thandleSubscribeRemoteVideoFun: function(event) {\r\n\t\t\tconst userID = event.currentTarget.dataset.userID;\r\n\t\t\tconst streamType = event.currentTarget.dataset.streamType;\r\n\t\t\tconst stream = this.streamList.find(item => {\r\n\t\t\t\treturn item.userID === userID && item.streamType === streamType;\r\n\t\t\t});\r\n\r\n\t\t\tif (stream.muteVideo) {\r\n\t\t\t\tthis.subscribeRemoteVideo({\r\n\t\t\t\t\tuserID,\r\n\t\t\t\t\tstreamType\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.unsubscribeRemoteVideo({\r\n\t\t\t\t\tuserID,\r\n\t\t\t\t\tstreamType\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 将远端视频取消全屏\r\n\t\t * @param event\r\n\t\t */\r\n\t\thandleSubscribeRemoteAudioFun: function(event) {\r\n\t\t\tconst userID = event.currentTarget.dataset.userID;\r\n\t\t\tconst streamType = event.currentTarget.dataset.streamType;\r\n\t\t\tconst stream = this.streamList.find(item => {\r\n\t\t\t\treturn item.userID === userID && item.streamType === streamType;\r\n\t\t\t});\r\n\r\n\t\t\tif (stream.muteAudio) {\r\n\t\t\t\tthis.subscribeRemoteAudio({\r\n\t\t\t\t\tuserID\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.unsubscribeRemoteAudio({\r\n\t\t\t\t\tuserID\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * grid布局, 唤起 memberlist-panel\r\n\t\t */\r\n\t\tswitchMemberListPanelFun() {\r\n\t\t\tthis.setData({\r\n\t\t\t\tpanelName: this.panelName !== 'memberlist-panel' ? 'memberlist-panel' : ''\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * grid布局, 唤起setting-panel\r\n\t\t */\r\n\t\tswitchSettingPanelFun() {\r\n\t\t\tthis.setData({\r\n\t\t\t\tpanelName: this.panelName !== 'setting-panel' ? 'setting-panel' : ''\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\thandleMaskerClickFun() {\r\n\t\t\tthis.setData({\r\n\t\t\t\tpanelName: ''\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tsetPuserPropertyFun(event) {\r\n\t\t\t// console.log(TAG_NAME, '_setPuserProperty', event)\r\n\t\t\tconst key = event.currentTarget.dataset.key;\r\n\t\t\tlet value = event.currentTarget.dataset.value;\r\n\t\t\tconst config = {};\r\n\r\n\t\t\tif (value === 'true') {\r\n\t\t\t\tvalue = true;\r\n\t\t\t} else if (value === 'false') {\r\n\t\t\t\tvalue = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof value === 'boolean') {\r\n\t\t\t\tconfig[key] = !this.pusher[key];\r\n\t\t\t} else if (typeof value === 'string' && value.indexOf('|') > 0) {\r\n\t\t\t\tvalue = value.split('|');\r\n\r\n\t\t\t\tif (this.pusher[key] === value[0]) {\r\n\t\t\t\t\tconfig[key] = value[1];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconfig[key] = value[0];\r\n\t\t\t\t}\r\n\t\t\t} // console.log(TAG_NAME, '_setPuserProperty', config)\r\n\r\n\t\t\tthis.setPusherConfigFun(config);\r\n\t\t},\r\n\r\n\t\tsetPlayerPropertyFun(event) {\r\n\t\t\tconsole.log(TAG_NAME, '_setPlayerProperty', event);\r\n\t\t\tconst userID = event.currentTarget.dataset.userid;\r\n\t\t\tconst streamType = event.currentTarget.dataset.streamtype;\r\n\t\t\tconst key = event.currentTarget.dataset.key;\r\n\t\t\tlet value = event.currentTarget.dataset.value;\r\n\t\t\tconst stream = this.userController.getStream({\r\n\t\t\t\tuserID: userID,\r\n\t\t\t\tstreamType: streamType\r\n\t\t\t});\r\n\r\n\t\t\tif (!stream) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst config = {};\r\n\r\n\t\t\tif (value === 'true') {\r\n\t\t\t\tvalue = true;\r\n\t\t\t} else if (value === 'false') {\r\n\t\t\t\tvalue = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof value === 'boolean') {\r\n\t\t\t\tconfig[key] = !stream[key];\r\n\t\t\t} else if (typeof value === 'string' && value.indexOf('|') > 0) {\r\n\t\t\t\tvalue = value.split('|');\r\n\r\n\t\t\t\tif (stream[key] === value[0]) {\r\n\t\t\t\t\tconfig[key] = value[1];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconfig[key] = value[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(TAG_NAME, '_setPlayerProperty', config);\r\n\t\t\tthis.setPlayerConfigFun({\r\n\t\t\t\tuserID,\r\n\t\t\t\tstreamType,\r\n\t\t\t\tconfig\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tswitchStreamTypeFun(event) {\r\n\t\t\tconst userID = event.currentTarget.dataset.userid;\r\n\t\t\tconst streamType = event.currentTarget.dataset.streamtype;\r\n\t\t\tconst stream = this.userController.getStream({\r\n\t\t\t\tuserID: userID,\r\n\t\t\t\tstreamType: streamType\r\n\t\t\t});\r\n\r\n\t\t\tif (stream && stream.streamType === 'main') {\r\n\t\t\t\tif (stream._definitionType === 'small') {\r\n\t\t\t\t\tthis.subscribeRemoteVideo({\r\n\t\t\t\t\t\tuserID,\r\n\t\t\t\t\t\tstreamType: 'main'\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.subscribeRemoteVideo({\r\n\t\t\t\t\t\tuserID,\r\n\t\t\t\t\t\tstreamType: 'small'\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\thandleSnapshotClickFun(event) {\r\n\t\t\twx.showToast({\r\n\t\t\t\ttitle: '开始截屏',\r\n\t\t\t\ticon: 'none',\r\n\t\t\t\tduration: 1000\r\n\t\t\t});\r\n\t\t\tconst userID = event.currentTarget.dataset.userid;\r\n\t\t\tconst streamType = event.currentTarget.dataset.streamtype;\r\n\t\t\tthis.snapshot({\r\n\t\t\t\tuserID,\r\n\t\t\t\tstreamType\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * grid布局, 绑定事件\r\n\t\t */\r\n\t\tbindEventGridFun() {\r\n\t\t\t// 远端音量变更\r\n\t\t\tthis.on(EVENT.REMOTE_AUDIO_VOLUME_UPDATE, event => {\r\n\t\t\t\tconst data = event.data;\r\n\t\t\t\tconst userID = data.currentTarget.dataset.userid;\r\n\t\t\t\tconst streamType = data.currentTarget.dataset.streamtype;\r\n\t\t\t\tconst volume = data.detail.volume; // console.log(TAG_NAME, '远端音量变更', userID, streamType, volume)\r\n\r\n\t\t\t\tconst stream = this.userController.getStream({\r\n\t\t\t\t\tuserID: userID,\r\n\t\t\t\t\tstreamType: streamType\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (stream) {\r\n\t\t\t\t\tstream.volume = volume;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setData(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstreamList: this.streamList\r\n\t\t\t\t\t},\r\n\t\t\t\t\t() => {}\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\ttoggleFullscreenFun(event) {\r\n\t\t\tconsole.log(TAG_NAME, '_toggleFullscreen', event);\r\n\t\t\tconst userID = event.currentTarget.dataset.userID;\r\n\t\t\tconst streamType = event.currentTarget.dataset.streamType;\r\n\r\n\t\t\tif (this._isFullscreen) {\r\n\t\t\t\tthis.exitFullscreen({\r\n\t\t\t\t\tuserID,\r\n\t\t\t\t\tstreamType\r\n\t\t\t\t})\r\n\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\tthis._isFullscreen = false;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(() => {});\r\n\t\t\t} else {\r\n\t\t\t\t// const stream = this.userController.getStream({ userID, streamType })\r\n\t\t\t\tconst direction = 0; // 已知问题：视频的尺寸需要等待player触发NetStatus事件才能获取到，如果进房就双击全屏，全屏后的方向有可能不对。\r\n\t\t\t\t// if (stream && stream.videoWidth && stream.videoHeight) {\r\n\t\t\t\t//   // 如果是横视频，全屏时进行横屏处理。如果是竖视频，则为0\r\n\t\t\t\t//   direction = stream.videoWidth > stream.videoHeight ? 90 : 0\r\n\t\t\t\t// }\r\n\r\n\t\t\t\tthis.enterFullscreen({\r\n\t\t\t\t\tuserID,\r\n\t\t\t\t\tstreamType,\r\n\t\t\t\t\tdirection\r\n\t\t\t\t})\r\n\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\tthis._isFullscreen = true;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(() => {});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n</script>\r\n<style>\r\n@import './trtc-room.css';\r\n</style>\n","import mod from \"-!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./trtc-room.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./trtc-room.vue?vue&type=style&index=0&lang=css&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1595992049527\n      var cssReload = require(\"D:/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"../../\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}